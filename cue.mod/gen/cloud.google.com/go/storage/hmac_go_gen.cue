// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go cloud.google.com/go/storage

package storage

import "time"

// HMACState is the state of the HMAC key.
//
// This type is EXPERIMENTAL and subject to change or removal without notice.
#HMACState: string // #enumHMACState

#enumHMACState:
	#Active |
	#Inactive |
	#Deleted

// Active is the status for an active key that can be used to sign
// requests.
#Active: #HMACState & "ACTIVE"

// Inactive is the status for an inactive key thus requests signed by
// this key will be denied.
#Inactive: #HMACState & "INACTIVE"

// Deleted is the status for a key that is deleted.
// Once in this state the key cannot key cannot be recovered
// and does not count towards key limits. Deleted keys will be cleaned
// up later.
#Deleted: #HMACState & "DELETED"

// HMACKey is the representation of a Google Cloud Storage HMAC key.
//
// HMAC keys are used to authenticate signed access to objects. To enable HMAC key
// authentication, please visit https://cloud.google.com/storage/docs/migrating.
//
// This type is EXPERIMENTAL and subject to change or removal without notice.
#HMACKey: {
	// The HMAC's secret key.
	Secret: string

	// AccessID is the ID of the HMAC key.
	AccessID: string

	// Etag is the HTTP/1.1 Entity tag.
	Etag: string

	// ID is the ID of the HMAC key, including the ProjectID and AccessID.
	ID: string

	// ProjectID is the ID of the project that owns the
	// service account to which the key authenticates.
	ProjectID: string

	// ServiceAccountEmail is the email address
	// of the key's associated service account.
	ServiceAccountEmail: string

	// CreatedTime is the creation time of the HMAC key.
	CreatedTime: time.Time

	// UpdatedTime is the last modification time of the HMAC key metadata.
	UpdatedTime: time.Time

	// State is the state of the HMAC key.
	// It can be one of StateActive, StateInactive or StateDeleted.
	State: #HMACState
}

// HMACKeyAttrsToUpdate defines the attributes of an HMACKey that will be updated.
//
// This type is EXPERIMENTAL and subject to change or removal without notice.
#HMACKeyAttrsToUpdate: {
	// State is required and must be either StateActive or StateInactive.
	State: #HMACState

	// Etag is an optional field and it is the HTTP/1.1 Entity tag.
	Etag: string
}

// HMACKeyOption configures the behavior of HMACKey related methods and actions.
//
// This interface is EXPERIMENTAL and subject to change or removal without notice.
#HMACKeyOption: _

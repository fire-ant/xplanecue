// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-azure/apis/storage/v1alpha3

package v1alpha3

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"github.com/Azure/azure-storage-blob-go/azblob"
)

// AccountParameters define the desired state of an Azure Blob Storage Account.
#AccountParameters: {
	// ResourceGroupName specifies the resource group for this Account.
	resourceGroupName: string @go(ResourceGroupName)

	// StorageAccountSpec specifies the desired state of this Account.
	storageAccountSpec?: null | #StorageAccountSpec @go(StorageAccountSpec,*StorageAccountSpec)
}

// An AccountSpec defines the desired state of an Account.
#AccountSpec: {
	xpv1.#ResourceSpec

	#AccountParameters
}

// An AccountStatus represents the observed state of an Account.
#AccountStatus: {
	xpv1.#ResourceStatus

	#StorageAccountStatus
}

// An Account is a managed resource that represents an Azure Blob Service
// Account.
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="RESOURCE_GROUP",type="string",JSONPath=".spec.resourceGroupName"
// +kubebuilder:printcolumn:name="ACCOUNT_NAME",type="string",JSONPath=".spec.storageAccountName"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#Account: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)
	spec:      #AccountSpec       @go(Spec)
	status?:   #AccountStatus     @go(Status)
}

// AccountList contains a list of Account.
#AccountList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#Account] @go(Items,[]Account)
}

// ContainerParameters define the desired state of an Azure Blob Storage
// Container.
#ContainerParameters: {
	// Metadata for this Container.
	// +optional
	metadata?: azblob.#Metadata @go(Metadata)

	// PublicAccessType for this container; either "blob" or "container".
	// +optional
	publicAccessType?: azblob.#PublicAccessType @go(PublicAccessType)
}

// A ContainerSpec defines the desired state of a Container.
#ContainerSpec: {
	xpv1.#ResourceSpec

	#ContainerParameters
}

// A ContainerStatus represents the observed status of a Container.
#ContainerStatus: {
	xpv1.#ResourceStatus
}

// A Container is a managed resource that represents an Azure Blob Storage
// Container.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="STORAGE_ACCOUNT",type="string",JSONPath=".spec.accountRef.name"
// +kubebuilder:printcolumn:name="PUBLIC_ACCESS_TYPE",type="string",JSONPath=".spec.publicAccessType"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#Container: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)
	spec:      #ContainerSpec     @go(Spec)
	status?:   #ContainerStatus   @go(Status)
}

// ContainerList - list of the container objects
#ContainerList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#Container] @go(Items,[]Container)
}

// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-azure/apis/database/v1alpha3

package v1alpha3

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// FirewallRuleProperties defines the properties of an Azure SQL firewall rule.
#FirewallRuleProperties: {
	// StartIPAddress of the IP range this firewall rule allows.
	startIpAddress: string @go(StartIPAddress)

	// EndIPAddress of the IP range this firewall rule allows.
	endIpAddress: string @go(EndIPAddress)
}

// A FirewallRuleObservation represents the observed state of an Azure SQL
// firewall rule.
#FirewallRuleObservation: {
	// ID - Resource ID
	id?: string @go(ID)

	// Type - Resource type.
	type?: string @go(Type)
}

// A FirewallRuleStatus represents the status of an Azure SQL firewall rule.
#FirewallRuleStatus: {
	xpv1.#ResourceStatus
	atProvider?: #FirewallRuleObservation @go(AtProvider)
}

// FirewallRuleParameters define the desired state of an Azure SQL firewall
// rule.
#FirewallRuleParameters: {
	// ServerName - Name of the Firewall Rule's server.
	serverName?: string @go(ServerName)

	// ServerNameRef - A reference to the Firewall Rule's MySQLServer.
	serverNameRef?: null | xpv1.#Reference @go(ServerNameRef,*xpv1.Reference)

	// ServerNameSelector - Selects a MySQLServer to reference.
	serverNameSelector?: null | xpv1.#Selector @go(ServerNameSelector,*xpv1.Selector)

	// ResourceGroupName - Name of the Firewall Rule's resource group.
	resourceGroupName?: string @go(ResourceGroupName)

	// ResourceGroupNameRef - A reference to a ResourceGroup object to retrieve
	// its name
	resourceGroupNameRef?: null | xpv1.#Reference @go(ResourceGroupNameRef,*xpv1.Reference)

	// ResourceGroupNameSelector - Selects a ResourceGroup to reference.
	resourceGroupNameSelector?: null | xpv1.#Selector @go(ResourceGroupNameSelector,*xpv1.Selector)

	// FirewallRuleProperties - Resource properties.
	properties: #FirewallRuleProperties @go(FirewallRuleProperties)
}

// A FirewallRuleSpec defines the desired state of an Azure SQL firewall rule.
#FirewallRuleSpec: {
	xpv1.#ResourceSpec
	forProvider: #FirewallRuleParameters @go(ForProvider)
}

// A MySQLServerFirewallRule is a managed resource that represents an Azure
// MySQL firewall rule.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="STATE",type="string",JSONPath=".status.state"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#MySQLServerFirewallRule: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta  @go(ObjectMeta)
	spec:      #FirewallRuleSpec   @go(Spec)
	status?:   #FirewallRuleStatus @go(Status)
}

// MySQLServerFirewallRuleList contains a list of MySQLServerFirewallRule.
#MySQLServerFirewallRuleList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#MySQLServerFirewallRule] @go(Items,[]MySQLServerFirewallRule)
}

// A PostgreSQLServerFirewallRule is a managed resource that represents an Azure
// PostgreSQL firewall rule.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="STATE",type="string",JSONPath=".status.state"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#PostgreSQLServerFirewallRule: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta  @go(ObjectMeta)
	spec:      #FirewallRuleSpec   @go(Spec)
	status?:   #FirewallRuleStatus @go(Status)
}

// PostgreSQLServerFirewallRuleList contains a list of
// PostgreSQLServerFirewallRule.
#PostgreSQLServerFirewallRuleList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#PostgreSQLServerFirewallRule] @go(Items,[]PostgreSQLServerFirewallRule)
}

// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/apigatewayv2/v1alpha1

package v1alpha1

import xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"

// CustomAPIParameters includes the custom fields.
#CustomAPIParameters: {
}

// CustomAPIMappingParameters includes the custom fields.
#CustomAPIMappingParameters: {
	// APIID is the ID for the API.
	// +immutable
	// +crossplane:generate:reference:type=API
	apiId?: null | string @go(APIID,*string)

	// APIIDRef is a reference to an API used to set
	// the APIID.
	// +optional
	apiIdRef?: null | xpv1.#Reference @go(APIIDRef,*xpv1.Reference)

	// APIIDSelector selects references to API used
	// to set the APIID.
	// +optional
	apiIdSelector?: null | xpv1.#Selector @go(APIIDSelector,*xpv1.Selector)

	// Stage is the name for the Stage.
	// +immutable
	// +crossplane:generate:reference:type=Stage
	stage?: null | string @go(Stage,*string)

	// StageDRef is a reference to an Stage used to set
	// the Stage.
	// +optional
	stageRef?: null | xpv1.#Reference @go(StageRef,*xpv1.Reference)

	// StageSelector selects references to Stage used
	// to set the Stage.
	// +optional
	stageSelector?: null | xpv1.#Selector @go(StageSelector,*xpv1.Selector)

	// DomainName is the DomainName for the DomainName.
	// +immutable
	// +crossplane:generate:reference:type=DomainName
	domainName?: null | string @go(DomainName,*string)

	// DomainNameRef is a reference to a DomainName used to set
	// the DomainName.
	// +optional
	domainNameRef?: null | xpv1.#Reference @go(DomainNameRef,*xpv1.Reference)

	// DomainNameSelector selects references to DomainName used
	// to set the DomainName.
	// +optional
	domainNameSelector?: null | xpv1.#Selector @go(DomainNameSelector,*xpv1.Selector)
}

// CustomAuthorizerParameters includes the custom fields.
#CustomAuthorizerParameters: {
	// APIID is the ID for the API.
	// +immutable
	apiId?: null | string @go(APIID,*string)

	// APIIDRef is a reference to an API used to set
	// the APIID.
	// +optional
	apiIdRef?: null | xpv1.#Reference @go(APIIDRef,*xpv1.Reference)

	// APIIDSelector selects references to API used
	// to set the APIID.
	// +optional
	apiIdSelector?: null | xpv1.#Selector @go(APIIDSelector,*xpv1.Selector)
}

// CustomDeploymentParameters includes the custom fields.
#CustomDeploymentParameters: {
	// APIID is the ID for the API.
	// +immutable
	apiId?: null | string @go(APIID,*string)

	// APIIDRef is a reference to an API used to set
	// the APIID.
	// +optional
	apiIdRef?: null | xpv1.#Reference @go(APIIDRef,*xpv1.Reference)

	// APIIDSelector selects references to API used
	// to set the APIID.
	// +optional
	apiIdSelector?: null | xpv1.#Selector @go(APIIDSelector,*xpv1.Selector)

	// StageNameRef is a reference to an Stage used to set
	// the StageName.
	// +optional
	stageNameRef?: null | xpv1.#Reference @go(StageNameRef,*xpv1.Reference)

	// StageNameSelector selects references to Stage used
	// to set the StageName.
	// +optional
	stageNameSelector?: null | xpv1.#Selector @go(StageNameSelector,*xpv1.Selector)
}

// CustomDomainNameParameters includes the custom fields.
#CustomDomainNameParameters: {
}

// ResponseParameters is a map of status codes and transform operations on each
// of them.
#ResponseParameters: {[string]: #ResponseParameter}

// ResponseParameter represents a single response parameter transform operation.
#ResponseParameter: {
	// HeaderEntries is the array of header changes you'd like to make.
	// For details, see Transforming API responses in https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-parameter-mapping.html
	headerEntry?: [...#HeaderEntry] @go(HeaderEntries,[]HeaderEntry)

	// OverwriteStatusCode is the status code you'd like the response to have,
	// overwriting the one in the original response.
	// For details, see Transforming API responses in https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-parameter-mapping.html
	overwriteStatusCodeEntry?: null | string @go(OverwriteStatusCode,*string)
}

// HeaderEntry can be used to represent a single header transform.
#HeaderEntry: {
	// Operation is what you'd like to do with given header. Only append, overwrite
	// and remove values are supported.
	// +kubebuilder:validation:Enum=append;overwrite;remove
	operation: string @go(Operation)

	// Name is the name of the header.
	name: string @go(Name)

	// Value is the new value.
	value: string @go(Value)
}

// CustomIntegrationParameters includes the custom fields.
#CustomIntegrationParameters: {
	// Supported only for HTTP APIs. You use response parameters to transform the
	// HTTP response from a backend integration before returning the response to
	// clients. Specify a key-value map from a selection key to response parameters.
	// The selection key must be a valid HTTP status code within the range of 200-599.
	responseParameters?: #ResponseParameters @go(ResponseParameters)

	// APIID is the ID for the API.
	// +immutable
	apiId?: null | string @go(APIID,*string)

	// APIIDRef is a reference to an API used to set
	// the APIID.
	// +optional
	apiIdRef?: null | xpv1.#Reference @go(APIIDRef,*xpv1.Reference)

	// APIIDSelector selects references to API used
	// to set the APIID.
	// +optional
	apiIdSelector?: null | xpv1.#Selector @go(APIIDSelector,*xpv1.Selector)
}

// CustomIntegrationResponseParameters includes the custom fields.
#CustomIntegrationResponseParameters: {
	// APIID is the ID for the API.
	// +immutable
	apiId?: null | string @go(APIID,*string)

	// APIIDRef is a reference to an API used to set
	// the APIID.
	// +optional
	apiIdRef?: null | xpv1.#Reference @go(APIIDRef,*xpv1.Reference)

	// APIIDSelector selects references to API used
	// to set the APIID.
	// +optional
	apiIdSelector?: null | xpv1.#Selector @go(APIIDSelector,*xpv1.Selector)

	// IntegrationID is the ID for the Integration.
	// +immutable
	integrationId?: null | string @go(IntegrationID,*string)

	// IntegrationIDRef is a reference to an Integration used to set
	// the IntegrationID.
	// +optional
	integrationIdRef?: null | xpv1.#Reference @go(IntegrationIDRef,*xpv1.Reference)

	// IntegrationIDSelector selects references to Integration used
	// to set the IntegrationID.
	// +optional
	integrationIdSelector?: null | xpv1.#Selector @go(IntegrationIDSelector,*xpv1.Selector)
}

// CustomModelParameters includes the custom fields.
#CustomModelParameters: {
	// APIID is the ID for the API.
	// +immutable
	apiId?: null | string @go(APIID,*string)

	// APIIDRef is a reference to an API used to set
	// the APIID.
	// +optional
	apiIdRef?: null | xpv1.#Reference @go(APIIDRef,*xpv1.Reference)

	// APIIDSelector selects references to API used
	// to set the APIID.
	// +optional
	apiIdSelector?: null | xpv1.#Selector @go(APIIDSelector,*xpv1.Selector)
}

// CustomRouteParameters includes the custom fields.
#CustomRouteParameters: {
	// APIID is the ID for the API.
	// +immutable
	apiId?: null | string @go(APIID,*string)

	// APIIDRef is a reference to an API used to set
	// the APIID.
	// +optional
	apiIdRef?: null | xpv1.#Reference @go(APIIDRef,*xpv1.Reference)

	// APIIDSelector selects references to API used
	// to set the APIID.
	// +optional
	apiIdSelector?: null | xpv1.#Selector @go(APIIDSelector,*xpv1.Selector)

	// AuthorizerIDRef is a reference to an Authorizer used to set
	// the AuthorizerID.
	// +optional
	authorizerIDRef?: null | xpv1.#Reference @go(AuthorizerIDRef,*xpv1.Reference)

	// AuthorizerIDSelector selects references to Authorizer used
	// to set the AuthorizerID.
	// +optional
	authorizerIDSelector?: null | xpv1.#Selector @go(AuthorizerIDSelector,*xpv1.Selector)

	// Target for the route, of the form integrations/IntegrationID,
	// where IntegrationID is the identifier of an AWS API Gateway Integration
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-aws/apis/apigatewayv2/v1alpha1.Integration
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-aws/apis/apigatewayv2/v1alpha1.IntegrationID()
	// +optional
	target?: null | string @go(Target,*string)

	// TargetRef is a reference to an Integration ID
	// +optional
	targetRef?: null | xpv1.#Reference @go(TargetRef,*xpv1.Reference)

	// TargetSelector is a selector for an Integration ID
	// +optional
	targetSelector?: null | xpv1.#Selector @go(TargetSelector,*xpv1.Selector)
}

// CustomRouteResponseParameters includes the custom fields.
#CustomRouteResponseParameters: {
	// APIID is the ID for the API.
	// +immutable
	apiId?: null | string @go(APIID,*string)

	// APIIDRef is a reference to an API used to set
	// the APIID.
	// +optional
	apiIdRef?: null | xpv1.#Reference @go(APIIDRef,*xpv1.Reference)

	// APIIDSelector selects references to API used
	// to set the APIID.
	// +optional
	apiIdSelector?: null | xpv1.#Selector @go(APIIDSelector,*xpv1.Selector)

	// RouteID is the ID for the Route.
	// +immutable
	routeId?: null | string @go(RouteID,*string)

	// RouteIDRef is a reference to an Route used to set
	// the RouteID.
	// +optional
	routeIdRef?: null | xpv1.#Reference @go(RouteIDRef,*xpv1.Reference)

	// RouteIDSelector selects references to Route used
	// to set the RouteID.
	// +optional
	routeIdSelector?: null | xpv1.#Selector @go(RouteIDSelector,*xpv1.Selector)
}

// CustomVPCLinkParameters includes the custom fields.
#CustomVPCLinkParameters: {
	// SecurityGroupIDs is the list of IDs for the SecurityGroups.
	securityGroupIds?: [...string] @go(SecurityGroupIDs,[]string)

	// SecurityGroupIDRefs is a list of references to SecurityGroups used to set
	// the SecurityGroupIDs.
	// +optional
	securityGroupIdRefs?: [...xpv1.#Reference] @go(SecurityGroupIDRefs,[]xpv1.Reference)

	// SecurityGroupIDsSelector selects references to SecurityGroupID used
	// to set the SecurityGroupIDs.
	// +optional
	securityGroupIdSelector?: null | xpv1.#Selector @go(SecurityGroupIDSelector,*xpv1.Selector)

	// SecurityGroupIDs is the list of IDs for the SecurityGroups.
	subnetIds?: [...string] @go(SubnetIDs,[]string)

	// SubnetIDRefs is a list of references to Subnets used to set
	// the SubnetIDs.
	// +optional
	subnetIdRefs?: [...xpv1.#Reference] @go(SubnetIDRefs,[]xpv1.Reference)

	// SubnetIDsSelector selects references to Subnets used
	// to set the SubnetIDs.
	// +optional
	subnetIdSelector?: null | xpv1.#Selector @go(SubnetIDSelector,*xpv1.Selector)
}

// CustomStageParameters includes the custom fields.
#CustomStageParameters: {
	// APIID is the ID for the API.
	// +immutable
	apiId?: null | string @go(APIID,*string)

	// APIIDRef is a reference to an API used to set
	// the APIID.
	// +optional
	apiIdRef?: null | xpv1.#Reference @go(APIIDRef,*xpv1.Reference)

	// APIIDSelector selects references to API used
	// to set the APIID.
	// +optional
	apiIdSelector?: null | xpv1.#Selector @go(APIIDSelector,*xpv1.Selector)
}

// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/elasticache/v1alpha1

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// CacheParameterGroupParameters defines the desired state of CacheParameterGroup
#CacheParameterGroupParameters: {
	// Region is which region the CacheParameterGroup will be created.
	// +kubebuilder:validation:Required
	region: string @go(Region)

	// The name of the cache parameter group family that the cache parameter group
	// can be used with.
	//
	// Valid values are: memcached1.4 | memcached1.5 | memcached1.6 | redis2.6 |
	// redis2.8 | redis3.2 | redis4.0 | redis5.0 | redis6.x
	// +kubebuilder:validation:Required
	cacheParameterGroupFamily?: null | string @go(CacheParameterGroupFamily,*string)

	// A user-specified description for the cache parameter group.
	// +kubebuilder:validation:Required
	description?: null | string @go(Description,*string)

	// A list of tags to be added to this resource. A tag is a key-value pair. A
	// tag key must be accompanied by a tag value, although null is accepted.
	tags?: [...null | #Tag] @go(Tags,[]*Tag)

	#CustomCacheParameterGroupParameters
}

// CacheParameterGroupSpec defines the desired state of CacheParameterGroup
#CacheParameterGroupSpec: {
	xpv1.#ResourceSpec
	forProvider: #CacheParameterGroupParameters @go(ForProvider)
}

// CacheParameterGroupObservation defines the observed state of CacheParameterGroup
#CacheParameterGroupObservation: {
	// The ARN (Amazon Resource Name) of the cache parameter group.
	arn?: null | string @go(ARN,*string)

	// The name of the cache parameter group.
	cacheParameterGroupName?: null | string @go(CacheParameterGroupName,*string)

	// Indicates whether the parameter group is associated with a Global datastore
	isGlobal?: null | bool @go(IsGlobal,*bool)
}

// CacheParameterGroupStatus defines the observed state of CacheParameterGroup.
#CacheParameterGroupStatus: {
	xpv1.#ResourceStatus
	atProvider?: #CacheParameterGroupObservation @go(AtProvider)
}

// CacheParameterGroup is the Schema for the CacheParameterGroups API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#CacheParameterGroup: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta         @go(ObjectMeta)
	spec:      #CacheParameterGroupSpec   @go(Spec)
	status?:   #CacheParameterGroupStatus @go(Status)
}

// CacheParameterGroupList contains a list of CacheParameterGroups
#CacheParameterGroupList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#CacheParameterGroup] @go(Items,[]CacheParameterGroup)
}

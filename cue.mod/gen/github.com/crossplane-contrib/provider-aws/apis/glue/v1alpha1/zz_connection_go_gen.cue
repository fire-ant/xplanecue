// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/glue/v1alpha1

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// ConnectionParameters defines the desired state of Connection
#ConnectionParameters: {
	// Region is which region the Connection will be created.
	// +kubebuilder:validation:Required
	region: string @go(Region)

	// The ID of the Data Catalog in which to create the connection. If none is
	// provided, the Amazon Web Services account ID is used by default.
	catalogID?: null | string @go(CatalogID,*string)

	// The tags you assign to the connection.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	#CustomConnectionParameters
}

// ConnectionSpec defines the desired state of Connection
#ConnectionSpec: {
	xpv1.#ResourceSpec
	forProvider: #ConnectionParameters @go(ForProvider)
}

// ConnectionObservation defines the observed state of Connection
#ConnectionObservation: {
	// The time that this connection definition was created.
	creationTime?: null | metav1.#Time @go(CreationTime,*metav1.Time)

	// The user, group, or role that last updated this connection definition.
	lastUpdatedBy?: null | string @go(LastUpdatedBy,*string)

	// The last time that this connection definition was updated.
	lastUpdatedTime?: null | metav1.#Time @go(LastUpdatedTime,*metav1.Time)
}

// ConnectionStatus defines the observed state of Connection.
#ConnectionStatus: {
	xpv1.#ResourceStatus
	atProvider?: #ConnectionObservation @go(AtProvider)
}

// Connection is the Schema for the Connections API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Connection: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)
	spec:      #ConnectionSpec    @go(Spec)
	status?:   #ConnectionStatus  @go(Status)
}

// ConnectionList contains a list of Connections
#ConnectionList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#Connection] @go(Items,[]Connection)
}

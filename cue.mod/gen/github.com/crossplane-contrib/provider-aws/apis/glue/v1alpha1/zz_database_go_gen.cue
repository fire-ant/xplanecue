// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/glue/v1alpha1

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// DatabaseParameters defines the desired state of Database
#DatabaseParameters: {
	// Region is which region the Database will be created.
	// +kubebuilder:validation:Required
	region: string @go(Region)

	// The ID of the Data Catalog in which to create the database. If none is provided,
	// the Amazon Web Services account ID is used by default.
	catalogID?: null | string @go(CatalogID,*string)

	#CustomDatabaseParameters
}

// DatabaseSpec defines the desired state of Database
#DatabaseSpec: {
	xpv1.#ResourceSpec
	forProvider: #DatabaseParameters @go(ForProvider)
}

// DatabaseObservation defines the observed state of Database
#DatabaseObservation: {
	// The time at which the metadata database was created in the catalog.
	createTime?: null | metav1.#Time @go(CreateTime,*metav1.Time)
}

// DatabaseStatus defines the observed state of Database.
#DatabaseStatus: {
	xpv1.#ResourceStatus
	atProvider?: #DatabaseObservation @go(AtProvider)
}

// Database is the Schema for the Databases API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Database: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)
	spec:      #DatabaseSpec      @go(Spec)
	status?:   #DatabaseStatus    @go(Status)
}

// DatabaseList contains a list of Databases
#DatabaseList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#Database] @go(Items,[]Database)
}

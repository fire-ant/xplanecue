// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/glue/v1alpha1

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// SecurityConfigurationParameters defines the desired state of SecurityConfiguration
#SecurityConfigurationParameters: {
	// Region is which region the SecurityConfiguration will be created.
	// +kubebuilder:validation:Required
	region: string @go(Region)

	#CustomSecurityConfigurationParameters
}

// SecurityConfigurationSpec defines the desired state of SecurityConfiguration
#SecurityConfigurationSpec: {
	xpv1.#ResourceSpec
	forProvider: #SecurityConfigurationParameters @go(ForProvider)
}

// SecurityConfigurationObservation defines the observed state of SecurityConfiguration
#SecurityConfigurationObservation: {
	// The time at which the new security configuration was created.
	createdTimestamp?: null | metav1.#Time @go(CreatedTimestamp,*metav1.Time)

	// The name assigned to the new security configuration.
	name?: null | string @go(Name,*string)
}

// SecurityConfigurationStatus defines the observed state of SecurityConfiguration.
#SecurityConfigurationStatus: {
	xpv1.#ResourceStatus
	atProvider?: #SecurityConfigurationObservation @go(AtProvider)
}

// SecurityConfiguration is the Schema for the SecurityConfigurations API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#SecurityConfiguration: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta           @go(ObjectMeta)
	spec:      #SecurityConfigurationSpec   @go(Spec)
	status?:   #SecurityConfigurationStatus @go(Status)
}

// SecurityConfigurationList contains a list of SecurityConfigurations
#SecurityConfigurationList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#SecurityConfiguration] @go(Items,[]SecurityConfiguration)
}

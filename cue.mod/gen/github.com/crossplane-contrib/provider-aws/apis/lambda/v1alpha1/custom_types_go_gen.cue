// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/lambda/v1alpha1

package v1alpha1

import xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"

// CustomCodeSigningConfigParameters includes custom fields for CodeSigningConfigParameters.
#CustomCodeSigningConfigParameters: {
}

// CustomFunctionParameters includes custom fields for FunctionParameters.
#CustomFunctionParameters: {
	// KMSKeyARNRef is a reference to a kms key used to set
	// the KMSKeyARN.
	// +optional
	kmsKeyARNRef?: null | xpv1.#Reference @go(KMSKeyARNRef,*xpv1.Reference)

	// KMSKeyARNSelector selects references to kms key arn used
	// to set the KMSKeyARN.
	// +optional
	kmsKeyARNSelector?: null | xpv1.#Selector @go(KMSKeyARNSelector,*xpv1.Selector)

	// The Amazon Resource Name (ARN) of the function's execution role.
	// One of role, roleRef or roleSelector is required.
	role?: null | string @go(Role,*string)

	// RoleRef is a reference to an iam role
	// +optional
	roleRef?: null | xpv1.#Reference @go(RoleRef,*xpv1.Reference)

	// RoleSelector selects references to iam role arn used
	// to set the lambda Role.
	// +optional
	roleSelector?: null | xpv1.#Selector @go(RoleSelector,*xpv1.Selector)

	// For network connectivity to AWS resources in a VPC, specify a list of security
	// groups and subnets in the VPC. When you connect a function to a VPC, it can
	// only access resources and the internet through that VPC. For more information,
	// see VPC Settings (https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html).
	vpcConfig?: null | #CustomFunctionVPCConfigParameters @go(CustomFunctionVPCConfigParameters,*CustomFunctionVPCConfigParameters)

	// The code for the function.
	// +kubebuilder:validation:Required
	code: #CustomFunctionCodeParameters @go(CustomFunctionCodeParameters)
}

// CustomFunctionCodeParameters includes custom fields for FunctionCode struct.
#CustomFunctionCodeParameters: {
	imageURI?:        null | string @go(ImageURI,*string)
	s3Key?:           null | string @go(S3Key,*string)
	s3ObjectVersion?: null | string @go(S3ObjectVersion,*string)
	s3Bucket?:        null | string @go(S3Bucket,*string)

	// S3BucketRef is a reference to an S3 Bucket.
	// +optional
	s3BucketRef?: null | xpv1.#Reference @go(S3BucketRef,*xpv1.Reference)

	// S3BucketSelector selects references to an S3 Bucket.
	// +optional
	s3BucketSelector?: null | xpv1.#Selector @go(S3BucketSelector,*xpv1.Selector)
}

// CustomFunctionVPCConfigParameters includes custom fields for FunctionVPCConfigParameters.
#CustomFunctionVPCConfigParameters: {
	securityGroupIDs?: [...null | string] @go(SecurityGroupIDs,[]*string)

	// SecurityGroupIDRefs is a list of references to SecurityGroups used to set
	// the SecurityGroupIDs.
	// +optional
	securityGroupIDRefs?: [...xpv1.#Reference] @go(SecurityGroupIDRefs,[]xpv1.Reference)

	// SecurityGroupIDsSelector selects references to SecurityGroupID used
	// to set the SecurityGroupIDs.
	// +optional
	securityGroupIDSelector?: null | xpv1.#Selector @go(SecurityGroupIDSelector,*xpv1.Selector)
	subnetIDs?: [...null | string] @go(SubnetIDs,[]*string)

	// SubnetIDRefs is a list of references to Subnets used to set
	// the SubnetIDs.
	// +optional
	subnetIDRefs?: [...xpv1.#Reference] @go(SubnetIDRefs,[]xpv1.Reference)

	// SubnetIDsSelector selects references to Subnets used
	// to set the SubnetIDs.
	// +optional
	subnetIDSelector?: null | xpv1.#Selector @go(SubnetIDSelector,*xpv1.Selector)
}

// CustomFunctionURLConfigParameters includes custom fields for FunctionURLConfigParameters.
#CustomFunctionURLConfigParameters: {
	// +optional
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-aws/apis/lambda/v1beta1.Function
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-aws/apis/lambda/v1beta1.FunctionARN()
	// +crossplane:generate:reference:refFieldName=FunctionNameRef
	// +crossplane:generate:reference:selectorFieldName=FunctionNameSelector
	functionName?: null | string @go(FunctionName,*string)

	// FunctionNameRef is a reference to a function used to set
	// the FunctionName.
	// +optional
	functionNameRef?: null | xpv1.#Reference @go(FunctionNameRef,*xpv1.Reference)

	// FunctionNameSelector selects references to function used
	// to set the FunctionName.
	// +optional
	functionNameSelector?: null | xpv1.#Selector @go(FunctionNameSelector,*xpv1.Selector)
}

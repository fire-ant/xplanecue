// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/ec2/v1alpha1

package v1alpha1

import xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"

// CustomLaunchTemplateParameters includes the custom fields of LaunchTemplate.
#CustomLaunchTemplateParameters: {
	// Metadata tagging key value pairs
	// +optional
	tags?: [...#Tag] @go(Tags,[]Tag)
}

// CustomVPCEndpointServiceConfigurationParameters contains the additional fields
// for VPCEndpointServiceConfigurationParameter.
#CustomVPCEndpointServiceConfigurationParameters: {
	// Metadata tagging key value pairs
	// +optional
	tags?: [...#Tag] @go(Tags,[]Tag)

	// The Amazon Resource Names (ARNs) of one or more Gateway Load Balancers.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-aws/apis/elbv2/v1alpha1.LoadBalancer
	// +crossplane:generate:reference:refFieldName=GatewayLoadBalancerARNRefs
	// +crossplane:generate:reference:selectorFieldName=GatewayLoadBalancerARNSelector
	gatewayLoadBalancerARNs?: [...null | string] @go(GatewayLoadBalancerARNs,[]*string)

	// GatewayLoadBalancerARNRefs is a list of references to GatewayLoadBalancerARNs used to set
	// the GatewayLoadBalancerARNs.
	// +optional
	gatewayLoadBalancerARNRefs?: [...xpv1.#Reference] @go(GatewayLoadBalancerARNRefs,[]xpv1.Reference)

	// GatewayLoadBalancerARNSelector selects references to GatewayLoadBalancerARNs used
	// to set the GatewayLoadBalancerARNs.
	// +optional
	gatewayLoadBalancerARNSelector?: null | xpv1.#Selector @go(GatewayLoadBalancerARNSelector,*xpv1.Selector)

	// The Amazon Resource Names (ARNs) of one or more Network Load Balancers for
	// your service.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-aws/apis/elbv2/v1alpha1.LoadBalancer
	// +crossplane:generate:reference:refFieldName=NetworkLoadBalancerARNRefs
	// +crossplane:generate:reference:selectorFieldName=NetworkLoadBalancerARNSelector
	networkLoadBalancerARNs?: [...null | string] @go(NetworkLoadBalancerARNs,[]*string)

	// NetworkLoadBalancerARNRefs is a list of references to NetworkLoadBalancerARNs used to set
	// the NetworkLoadBalancerARNs.
	// +optional
	networkLoadBalancerARNRefs?: [...xpv1.#Reference] @go(NetworkLoadBalancerARNRefs,[]xpv1.Reference)

	// NetworkLoadBalancerARNSelector selects references to NetworkLoadBalancerARNs used
	// to set the NetworkLoadBalancerARNs.
	// +optional
	networkLoadBalancerARNSelector?: null | xpv1.#Selector @go(NetworkLoadBalancerARNSelector,*xpv1.Selector)
}

// CustomLaunchTemplateVersionParameters includes the custom fields of LaunchTemplateVersion.
#CustomLaunchTemplateVersionParameters: {
	// The ID of the Launch Template. You must specify this parameter in the request.
	// +crossplane:generate:reference:type=LaunchTemplate
	launchTemplateId?: null | string @go(LaunchTemplateID,*string)

	// LaunchTemplateIDRef is a reference to an API used to set
	// the LaunchTemplateID.
	// +optional
	launchTemplateIdRef?: null | xpv1.#Reference @go(LaunchTemplateIDRef,*xpv1.Reference)

	// LaunchTemplateIDSelector selects references to API used
	// to set the LaunchTemplateID.
	// +optional
	launchTemplateIdSelector?: null | xpv1.#Selector @go(LaunchTemplateIDSelector,*xpv1.Selector)

	// The Name of the Launch Template. You must specify this parameter in the request.
	// +crossplane:generate:reference:type=LaunchTemplate
	launchTemplateName?: null | string @go(LaunchTemplateName,*string)

	// LaunchTemplateNameRef is a reference to an API used to set
	// the LaunchTemplateName.
	// +optional
	launchTemplateNameRef?: null | xpv1.#Reference @go(LaunchTemplateNameRef,*xpv1.Reference)

	// LaunchTemplateNameSelector selects references to API used
	// to set the LaunchTemplateName.
	// +optional
	launchTemplateNameSelector?: null | xpv1.#Selector @go(LaunchTemplateNameSelector,*xpv1.Selector)
}

// CustomVolumeParameters contains the additional fields for VolumeParameters.
#CustomVolumeParameters: {
	// The identifier of the AWS Key Management Service (AWS KMS) customer master
	// key (CMK) to use for Amazon EBS encryption. If this parameter is not specified,
	// your AWS managed CMK for EBS is used. If KmsKeyId is specified, the encrypted
	// state must be true.
	//
	// You can specify the CMK using any of the following:
	//
	//    * Key ID. For example, 1234abcd-12ab-34cd-56ef-1234567890ab.
	//
	//    * Key alias. For example, alias/ExampleAlias.
	//
	//    * Key ARN. For example, arn:aws:kms:us-east-1:012345678910:key/1234abcd-12ab-34cd-56ef-1234567890ab.
	//
	//    * Alias ARN. For example, arn:aws:kms:us-east-1:012345678910:alias/ExampleAlias.
	//
	// AWS authenticates the CMK asynchronously. Therefore, if you specify an ID,
	// alias, or ARN that is not valid, the action can appear to complete, but eventually
	// fails.
	// +optional
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-aws/apis/kms/v1alpha1.Key
	// +crossplane:generate:reference:refFieldName=KMSKeyIDRef
	// +crossplane:generate:reference:selectorFieldName=KMSKeyIDSelector
	kmsKeyId?: null | string @go(KMSKeyID,*string)

	// KMSKeyIDRef is a reference to a KMS Key used to set KMSKeyID.
	// +optional
	kmsKeyIdRef?: null | xpv1.#Reference @go(KMSKeyIDRef,*xpv1.Reference)

	// KMSKeyIDSelector selects a reference to a KMS Key used to set KMSKeyID.
	// +optional
	kmsKeyIdSelector?: null | xpv1.#Selector @go(KMSKeyIDSelector,*xpv1.Selector)
}

// CustomVPCPeeringConnectionParameters are custom parameters for VPCPeeringConnection
#CustomVPCPeeringConnectionParameters: {
	// The ID of the requester VPC. You must specify this parameter in the request.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-aws/apis/ec2/v1beta1.VPC
	vpcID?: null | string @go(VPCID,*string)

	// VPCIDRef is a reference to an API used to set
	// the VPCID.
	// +optional
	vpcIDRef?: null | xpv1.#Reference @go(VPCIDRef,*xpv1.Reference)

	// VPCIDSelector selects references to API used
	// to set the VPCID.
	// +optional
	vpcIDSelector?: null | xpv1.#Selector @go(VPCIDSelector,*xpv1.Selector)

	// The ID of the VPC with which you are creating the VPC peering connection.
	// You must specify this parameter in the request.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-aws/apis/ec2/v1beta1.VPC
	peerVPCID?: null | string @go(PeerVPCID,*string)

	// PeerVPCIDRef is a reference to an API used to set
	// the PeerVPCID.
	// +optional
	peerVPCIDRef?: null | xpv1.#Reference @go(PeerVPCIDRef,*xpv1.Reference)

	// PeerVPCIDSelector selects references to API used
	// to set the PeerVPCID.
	// +optional
	peerVPCIDSelector?: null | xpv1.#Selector @go(PeerVPCIDSelector,*xpv1.Selector)

	// Automatically accepts the peering connection. If this is not set, the peering connection
	// will be created, but will be in pending-acceptance state. This will only lead to an active
	// connection if both VPCs are in the same tenant.
	acceptRequest?: bool @go(AcceptRequest)

	// Metadata tagging key value pairs
	// +optional
	tags?: [...#Tag] @go(Tags,[]Tag)

	// RequesterPeeringOptions describes the Requester VPC peering connection options.
	// +optional
	requesterPeeringOptions?: null | #VPCPeeringConnectionOptionsDescription @go(RequesterPeeringOptions,*VPCPeeringConnectionOptionsDescription)

	// AccepterRequesterPeeringOptions describes the Accepter VPC peering connection options.
	// +optional
	accepterPeeringOptions?: null | #VPCPeeringConnectionOptionsDescription @go(AccepterPeeringOptions,*VPCPeeringConnectionOptionsDescription)
}

// CustomTransitGatewayParameters are custom parameters for TransitGateway
#CustomTransitGatewayParameters: {
	// Metadata tagging key value pairs
	// +optional
	tags?: [...#Tag] @go(Tags,[]Tag)
}

// CustomTransitGatewayVPCAttachmentParameters are custom parameters for TransitGatewayVPCAttachment
#CustomTransitGatewayVPCAttachmentParameters: {
	// The ID of the VPC.
	// +optional
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-aws/apis/ec2/v1beta1.VPC
	vpcId?: null | string @go(VPCID,*string)

	// VPCIDRef is a reference to an API used to set
	// the VPCID.
	// +optional
	vpcIdRef?: null | xpv1.#Reference @go(VPCIDRef,*xpv1.Reference)

	// VPCIDSelector selects references to API used
	// to set the VPCID.
	// +optional
	vpcIdSelector?: null | xpv1.#Selector @go(VPCIDSelector,*xpv1.Selector)

	// The IDs of one or more subnets. You can specify only one subnet per Availability
	// Zone. You must specify at least one subnet, but we recommend that you specify
	// two subnets for better availability. The transit gateway uses one IP address
	// from each specified subnet.
	// +optional
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-aws/apis/ec2/v1beta1.Subnet
	// +crossplane:generate:reference:refFieldName=SubnetIDRefs
	// +crossplane:generate:reference:selectorFieldName=SubnetIDSelector
	subnetIds?: [...null | string] @go(SubnetIDs,[]*string)

	// SubnetIDRefs is a list of references to SubnetIDs used to set
	// the SubnetIDs.
	// +optional
	subnetIdRefs?: [...xpv1.#Reference] @go(SubnetIDRefs,[]xpv1.Reference)

	// SubnetIDSelector selects references to SubnetIDs used
	// to set the SubnetIDs.
	// +optional
	subnetIdSelector?: null | xpv1.#Selector @go(SubnetIDSelector,*xpv1.Selector)

	// The ID of the transit gateway.
	// +optional
	// +crossplane:generate:reference:type=TransitGateway
	transitGatewayId?: null | string @go(TransitGatewayID,*string)

	// TransitGatewayIDRef is a reference to an API used to set
	// the TransitGatewayID.
	// +optional
	transitGatewayIdRef?: null | xpv1.#Reference @go(TransitGatewayIDRef,*xpv1.Reference)

	// TransitGatewayIDSelector selects references to API used
	// to set the TransitGatewayID.
	// +optional
	transitGatewayIdSelector?: null | xpv1.#Selector @go(TransitGatewayIDSelector,*xpv1.Selector)

	// Metadata tagging key value pairs
	// +optional
	tags?: [...#Tag] @go(Tags,[]Tag)
}

// CustomRouteParameters are custom parameters for Route
#CustomRouteParameters: {
	// The ID of a transit gateway.
	// +optional
	// +crossplane:generate:reference:type=TransitGateway
	transitGatewayId?: null | string @go(TransitGatewayID,*string)

	// TransitGatewayIDRef is a reference to an API used to set
	// the TransitGatewayID.
	// +optional
	transitGatewayIdRef?: null | xpv1.#Reference @go(TransitGatewayIDRef,*xpv1.Reference)

	// TransitGatewayIDSelector selects references to API used
	// to set the TransitGatewayID.
	// +optional
	transitGatewayIdSelector?: null | xpv1.#Selector @go(TransitGatewayIDSelector,*xpv1.Selector)

	// [IPv4 traffic only] The ID of a NAT gateway.
	// +optional
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-aws/apis/ec2/v1beta1.NATGateway
	natGatewayId?: null | string @go(NATGatewayID,*string)

	// NATGatewayIDRef is a reference to an API used to set
	// the NATGatewayID.
	// +optional
	natGatewayIdRef?: null | xpv1.#Reference @go(NATGatewayIDRef,*xpv1.Reference)

	// NATGatewayIDSelector selects references to API used
	// to set the NATGatewayID.
	// +optional
	natGatewayIdSelector?: null | xpv1.#Selector @go(NATGatewayIDSelector,*xpv1.Selector)

	// The ID of a VPC peering connection.
	// +crossplane:generate:reference:type=VPCPeeringConnection
	vpcPeeringConnectionId?: null | string @go(VPCPeeringConnectionID,*string)

	// VPCPeeringConnectionIDRef is a reference to an API used to set
	// the VPCPeeringConnectionID.
	// +optional
	vpcPeeringConnectionIdRef?: null | xpv1.#Reference @go(VPCPeeringConnectionIDRef,*xpv1.Reference)

	// VPCPeeringConnectionIDSelector selects references to API used
	// to set the VPCPeeringConnectionID.
	// +optional
	vpcPeeringConnectionIdSelector?: null | xpv1.#Selector @go(VPCPeeringConnectionIDSelector,*xpv1.Selector)

	// The ID of the route table for the route.
	// provider-aws currently provides both a standalone Route resource
	// and a RouteTable resource with routes defined in-line.
	// At this time you cannot use a RouteTable with in-line routes
	// in conjunction with any Route resources.
	// Set the flag ignoreRoutes=true in RouteTable to use Route resource
	// +optional
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-aws/apis/ec2/v1beta1.RouteTable
	routeTableId?: null | string @go(RouteTableID,*string)

	// RouteTableIDRef is a reference to an API used to set
	// the RouteTableID.
	// +optional
	routeTableIdRef?: null | xpv1.#Reference @go(RouteTableIDRef,*xpv1.Reference)

	// RouteTableIDSelector selects references to API used
	// to set the RouteTableID.
	// +optional
	routeTableIdSelector?: null | xpv1.#Selector @go(RouteTableIDSelector,*xpv1.Selector)

	// The ID of a NAT instance in your VPC. The operation fails if you specify
	// an instance ID unless exactly one network interface is attached.
	// +optional
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-aws/apis/ec2/manualv1alpha1.Instance
	instanceId?: null | string @go(InstanceID,*string)

	// InstanceIDRef is a reference to an API used to set
	// the InstanceID.
	// +optional
	instanceIdRef?: null | xpv1.#Reference @go(InstanceIDRef,*xpv1.Reference)

	// InstanceIDSelector selects references to API used
	// to set the InstanceID.
	// +optional
	instanceIdSelector?: null | xpv1.#Selector @go(InstanceIDSelector,*xpv1.Selector)

	// The ID of an internet gateway attached to your VPC.
	// +optional
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-aws/apis/ec2/v1beta1.InternetGateway
	gatewayId?: null | string @go(GatewayID,*string)

	// GatewayIDRef is a reference to an API used to set
	// the GatewayID.
	// +optional
	gatewayIdRef?: null | xpv1.#Reference @go(GatewayIDRef,*xpv1.Reference)

	// GatewayIDSelector selects references to API used
	// to set the GatewayID.
	// +optional
	gatewayIdSelector?: null | xpv1.#Selector @go(GatewayIDSelector,*xpv1.Selector)
}

// CustomVPCEndpointParameters are custom parameters for VPCEndpoint
#CustomVPCEndpointParameters: {
	// The ID of the VPC. You must specify this parameter in the request.
	// +optional
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-aws/apis/ec2/v1beta1.VPC
	vpcId?: null | string @go(VPCID,*string)

	// VPCIDRef is a reference to an API used to set
	// the VPCID.
	// +optional
	vpcIdRef?: null | xpv1.#Reference @go(VPCIDRef,*xpv1.Reference)

	// VPCIDSelector selects references to API used
	// to set the VPCID.
	// +optional
	vpcIdSelector?: null | xpv1.#Selector @go(VPCIDSelector,*xpv1.Selector)

	// (Interface endpoint) The ID of one or more security groups to associate with
	// the endpoint network interface.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-aws/apis/ec2/v1beta1.SecurityGroup
	// +crossplane:generate:reference:refFieldName=SecurityGroupIDRefs
	// +crossplane:generate:reference:selectorFieldName=SecurityGroupIDSelector
	securityGroupIds?: [...null | string] @go(SecurityGroupIDs,[]*string)

	// SecurityGroupIDRefs is a list of references to SecurityGroups used to set
	// the SecurityGroupIDs.
	// +optional
	securityGroupIdRefs?: [...xpv1.#Reference] @go(SecurityGroupIDRefs,[]xpv1.Reference)

	// SecurityGroupIDsSelector selects references to SecurityGroupID used
	// to set the SecurityGroupIDs.
	// +optional
	securityGroupIdSelector?: null | xpv1.#Selector @go(SecurityGroupIDSelector,*xpv1.Selector)

	// (Interface and Gateway Load Balancer endpoints) The ID of one or more subnets
	// in which to create an endpoint network interface. For a Gateway Load Balancer
	// endpoint, you can specify one subnet only.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-aws/apis/ec2/v1beta1.Subnet
	// +crossplane:generate:reference:refFieldName=SubnetIDRefs
	// +crossplane:generate:reference:selectorFieldName=SubnetIDSelector
	subnetIds?: [...null | string] @go(SubnetIDs,[]*string)

	// SubnetIDRefs is a list of references to Subnets used to set
	// the SubnetIDs.
	// +optional
	subnetIdRefs?: [...xpv1.#Reference] @go(SubnetIDRefs,[]xpv1.Reference)

	// SubnetIDsSelector selects references to Subnets used
	// to set the SubnetIDs.
	// +optional
	subnetIdSelector?: null | xpv1.#Selector @go(SubnetIDSelector,*xpv1.Selector)

	// (Gateway endpoint) One or more route table IDs.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-aws/apis/ec2/v1beta1.RouteTable
	// +crossplane:generate:reference:refFieldName=RouteTableIDRefs
	// +crossplane:generate:reference:selectorFieldName=RouteTableIDSelector
	routeTableIds?: [...null | string] @go(RouteTableIDs,[]*string)

	// RouteTableIDRefs is a list of references to RouteTables used to set
	// the RouteTableIDs.
	// +optional
	routeTableIdRefs?: [...xpv1.#Reference] @go(RouteTableIDRefs,[]xpv1.Reference)

	// RouteTableIDsSelector selects references to RouteTables used
	// to set the RouteTableIDs.
	// +optional
	routeTableIdSelector?: null | xpv1.#Selector @go(RouteTableIDSelector,*xpv1.Selector)
}

// CustomTransitGatewayRouteParameters are custom parameters for TransitGatewayRouteParameters
#CustomTransitGatewayRouteParameters: {
	// The ID of the attachment.
	// +optional
	// +crossplane:generate:reference:type=TransitGatewayVPCAttachment
	transitGatewayAttachmentId?: null | string @go(TransitGatewayAttachmentID,*string)

	// TransitGatewayAttachmentIDRef is a reference to an API used to set
	// the TransitGatewayAttachmentID.
	// +optional
	transitGatewayAttachmentIdRef?: null | xpv1.#Reference @go(TransitGatewayAttachmentIDRef,*xpv1.Reference)

	// TransitGatewayAttachmentIDSelector selects references to API used
	// to set the TransitGatewayAttachmentID.
	// +optional
	transitGatewayAttachmentIdSelector?: null | xpv1.#Selector @go(TransitGatewayAttachmentIDSelector,*xpv1.Selector)

	// The ID of the transit gateway route table.
	// +optional
	// +crossplane:generate:reference:type=TransitGatewayRouteTable
	transitGatewayRouteTableId?: null | string @go(TransitGatewayRouteTableID,*string)

	// TransitGatewayRouteTableIDRef is a reference to an API used to set
	// the TransitGatewayRouteTableID.
	// +optional
	transitGatewayRouteTableIdRef?: null | xpv1.#Reference @go(TransitGatewayRouteTableIDRef,*xpv1.Reference)

	// TransitGatewayRouteTableIDSelector selects references to API used
	// to set the TransitGatewayRouteTableID.
	// +optional
	transitGatewayRouteTableIdSelector?: null | xpv1.#Selector @go(TransitGatewayRouteTableIDSelector,*xpv1.Selector)
}

// CustomTransitGatewayRouteTableParameters are custom parameters for TransitGatewayRouteTableParameters
#CustomTransitGatewayRouteTableParameters: {
	// The ID of the transit gateway.
	// +optional
	// +crossplane:generate:reference:type=TransitGateway
	transitGatewayId?: null | string @go(TransitGatewayID,*string)

	// TransitGatewayIDRef is a reference to an API used to set
	// the TransitGatewayID.
	// +optional
	transitGatewayIdRef?: null | xpv1.#Reference @go(TransitGatewayIDRef,*xpv1.Reference)

	// TransitGatewayIDSelector selects references to API used
	// to set the TransitGatewayID.
	// +optional
	transitGatewayIdSelector?: null | xpv1.#Selector @go(TransitGatewayIDSelector,*xpv1.Selector)

	// Metadata tagging key value pairs
	// +optional
	tags?: [...#Tag] @go(Tags,[]Tag)
}

// CustomFlowLogParameters are custom parameters for FlowLogParameters
#CustomFlowLogParameters: {
	// Metadata tagging key value pairs
	// +optional
	tags?: [...#Tag] @go(Tags,[]Tag)

	// The ID of the subnet, network interface, or VPC for which you want to create
	// a flow log.
	//
	// Constraints: Maximum of 1000 resources
	// +optional
	resourceIDs: [...null | string] @go(ResourceIDs,[]*string)

	// The type of resource for which to create the flow log. For example, if you
	// specified a VPC ID for the ResourceId property, specify VPC for this property.
	// +optional
	resourceType?: null | string @go(ResourceType,*string)

	// The ID of the VPC for which you want to create a flow log.
	// +optional
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-aws/apis/ec2/v1beta1.VPC
	vpcId?: null | string @go(VPCID,*string)

	// VPCIDRef is a reference to an API used to set
	// the VPCID.
	// +optional
	vpcIdRef?: null | xpv1.#Reference @go(VPCIDRef,*xpv1.Reference)

	// VPCIDSelector selects references to API used
	// to set the VPCID.
	// +optional
	vpcIdSelector?: null | xpv1.#Selector @go(VPCIDSelector,*xpv1.Selector)

	// The ID of the TransitGateway for which you want to create a flow log.
	// +optional
	// +crossplane:generate:reference:type=TransitGateway
	transitGatewayId?: null | string @go(TransitGatewayID,*string)

	// TransitGatewayIDRef is a reference to an API used to set
	// the TransitGatewayID.
	// +optional
	transitGatewayIdRef?: null | xpv1.#Reference @go(TransitGatewayIDRef,*xpv1.Reference)

	// TransitGatewayIDSelector selects references to API used
	// to set the TransitGatewayID.
	// +optional
	transitGatewayIdSelector?: null | xpv1.#Selector @go(TransitGatewayIDSelector,*xpv1.Selector)

	// The ID of the TransitGatewayAttachment for which you want to create a flow log.
	// +optional
	// +crossplane:generate:reference:type=TransitGatewayVPCAttachment
	transitGatewayAttachmentId?: null | string @go(TransitGatewayAttachmentID,*string)

	// TransitGatewayAttachmentIDRef is a reference to an API used to set
	// the TransitGatewayAttachmentID.
	// +optional
	transitGatewayAttachmentIdRef?: null | xpv1.#Reference @go(TransitGatewayAttachmentIDRef,*xpv1.Reference)

	// TransitGatewayAttachmentIDSelector selects references to API used
	// to set the TransitGatewayAttachmentID.
	// +optional
	transitGatewayAttachmentIdSelector?: null | xpv1.#Selector @go(TransitGatewayAttachmentIDSelector,*xpv1.Selector)

	// The ID of the one or more Subnets for which you want to create a flow log.
	// +optional
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-aws/apis/ec2/v1beta1.Subnet
	subnetId?: null | string @go(SubnetID,*string)

	// SubnetIDRefs is a referenc to a SubnetID used to set
	// the SubnetID.
	// +optional
	subnetIdRef?: null | xpv1.#Reference @go(SubnetIDRef,*xpv1.Reference)

	// SubnetIDSelector selects reference to a SubnetID used
	// to set the SubnetID.
	// +optional
	subnetIdSelector?: null | xpv1.#Selector @go(SubnetIDSelector,*xpv1.Selector)

	// The ID of the NetworkInterface for which you want to create a flow log.
	// +optional
	networkInterfaceId?: null | string @go(NetworkInterfaceID,*string)

	// The ARN for the IAM role that permits Amazon EC2
	// to publish flow logs to a CloudWatch Logs log group in your
	// account. \n If you specify LogDestinationType as s3, do not
	// specify DeliverLogsPermissionArn or LogGroupName.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-aws/apis/iam/v1beta1.RoleARN()
	deliverLogsPermissionArn?: null | string @go(DeliverLogsPermissionARN,*string)

	// DeliverLogsPermissionARNRef is a reference to DeliverLogsPermissionARN used to set
	// the DeliverLogsPermissionARN.
	// +optional
	deliverLogsPermissionArnRef?: null | xpv1.#Reference @go(DeliverLogsPermissionARNRef,*xpv1.Reference)

	// DeliverLogsPermissionARNelector selects a reference to DeliverLogsPermissionARN used
	// to set the DeliverLogsPermissionARN.
	// +optional
	deliverLogsPermissionArnSelector?: null | xpv1.#Selector @go(DeliverLogsPermissionARNSelector,*xpv1.Selector)

	// The Amazon Resource Names (ARNs) of a CloudWatch Log Group.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-aws/apis/cloudwatchlogs/v1alpha1.LogGroup
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-aws/apis/cloudwatchlogs/v1alpha1.LogGroupARN()
	cloudWatchLogDestination?: null | string @go(CloudWatchLogDestination,*string)

	// CloudWatchLogDestinationRef is a reference to a CloudWatch Log Group used to set
	// the CloudWatchLogDestination.
	// +optional
	cloudWatchLogDestinationRef?: null | xpv1.#Reference @go(CloudWatchLogDestinationRef,*xpv1.Reference)

	// CloudWatchLogDestinationSelector selects a reference to a CloudWatch Log Group used
	// to set the CloudWatchLogDestination.
	// +optional
	cloudWatchLogDestinationSelector?: null | xpv1.#Selector @go(CloudWatchLogDestinationSelector,*xpv1.Selector)

	// The Amazon Resource Names (ARNs) of a CloudWatch Log Group.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-aws/apis/s3/v1beta1.Bucket
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-aws/apis/s3/v1beta1.BucketARN()
	s3BucketLogDestination?: null | string @go(S3BucketLogDestination,*string)

	// S3BucketLogDestinationRef is a reference to a S3 Bucket  to set
	// the S3BucketLogDestination.
	// +optional
	s3BucketLogDestinationRef?: null | xpv1.#Reference @go(S3BucketLogDestinationRef,*xpv1.Reference)

	// S3BucketLogDestinationSelector selects a reference to a S3 Bucket used
	// to set the S3BucketLogDestination.
	// +optional
	s3BucketLogDestinationSelector?: null | xpv1.#Selector @go(S3BucketLogDestinationSelector,*xpv1.Selector)

	// S3BucketSubfolder allows you to use a subfolder in a S3Bucket, if S3BucketLogDestination is used to determin the ARN of a Bucket managed by crossplane
	// S3BucketSubfolder starts and ends without an slash e.g. test/test2
	// You cannot use AWSLogs as a subfolder name. This is a reserved term.
	// +optional
	s3BucketSubfolder?: null | string @go(S3BucketSubfolder,*string)
}

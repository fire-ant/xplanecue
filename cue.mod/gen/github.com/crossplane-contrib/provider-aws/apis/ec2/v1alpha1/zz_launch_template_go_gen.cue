// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/ec2/v1alpha1

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// LaunchTemplateParameters defines the desired state of LaunchTemplate
#LaunchTemplateParameters: {
	// Region is which region the LaunchTemplate will be created.
	// +kubebuilder:validation:Required
	region: string @go(Region)

	// The information for the launch template.
	// +kubebuilder:validation:Required
	launchTemplateData?: null | #RequestLaunchTemplateData @go(LaunchTemplateData,*RequestLaunchTemplateData)

	// A name for the launch template.
	// +kubebuilder:validation:Required
	launchTemplateName?: null | string @go(LaunchTemplateName,*string)

	// The tags to apply to the launch template during creation.
	tagSpecifications?: [...null | #TagSpecification] @go(TagSpecifications,[]*TagSpecification)

	// A description for the first version of the launch template.
	versionDescription?: null | string @go(VersionDescription,*string)

	#CustomLaunchTemplateParameters
}

// LaunchTemplateSpec defines the desired state of LaunchTemplate
#LaunchTemplateSpec: {
	xpv1.#ResourceSpec
	forProvider: #LaunchTemplateParameters @go(ForProvider)
}

// LaunchTemplateObservation defines the observed state of LaunchTemplate
#LaunchTemplateObservation: {
	// Information about the launch template.
	launchTemplate?: null | #LaunchTemplate_SDK @go(LaunchTemplate,*LaunchTemplate_SDK)

	// If the launch template contains parameters or parameter combinations that
	// are not valid, an error code and an error message are returned for each issue
	// that's found.
	warning?: null | #ValidationWarning @go(Warning,*ValidationWarning)
}

// LaunchTemplateStatus defines the observed state of LaunchTemplate.
#LaunchTemplateStatus: {
	xpv1.#ResourceStatus
	atProvider?: #LaunchTemplateObservation @go(AtProvider)
}

// LaunchTemplate is the Schema for the LaunchTemplates API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#LaunchTemplate: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta    @go(ObjectMeta)
	spec:      #LaunchTemplateSpec   @go(Spec)
	status?:   #LaunchTemplateStatus @go(Status)
}

// LaunchTemplateList contains a list of LaunchTemplates
#LaunchTemplateList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#LaunchTemplate] @go(Items,[]LaunchTemplate)
}

// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/ec2/v1alpha1

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// VPCEndpointServiceConfigurationParameters defines the desired state of VPCEndpointServiceConfiguration
#VPCEndpointServiceConfigurationParameters: {
	// Region is which region the VPCEndpointServiceConfiguration will be created.
	// +kubebuilder:validation:Required
	region: string @go(Region)

	// Indicates whether requests from service consumers to create an endpoint to
	// your service must be accepted manually.
	acceptanceRequired?: null | bool @go(AcceptanceRequired,*bool)

	// (Interface endpoint configuration) The private DNS name to assign to the
	// VPC endpoint service.
	privateDNSName?: null | string @go(PrivateDNSName,*string)

	// The tags to associate with the service.
	tagSpecifications?: [...null | #TagSpecification] @go(TagSpecifications,[]*TagSpecification)

	#CustomVPCEndpointServiceConfigurationParameters
}

// VPCEndpointServiceConfigurationSpec defines the desired state of VPCEndpointServiceConfiguration
#VPCEndpointServiceConfigurationSpec: {
	xpv1.#ResourceSpec
	forProvider: #VPCEndpointServiceConfigurationParameters @go(ForProvider)
}

// VPCEndpointServiceConfigurationObservation defines the observed state of VPCEndpointServiceConfiguration
#VPCEndpointServiceConfigurationObservation: {
	// Unique, case-sensitive identifier that you provide to ensure the idempotency
	// of the request.
	clientToken?: null | string @go(ClientToken,*string)

	// Information about the service configuration.
	serviceConfiguration?: null | #ServiceConfiguration @go(ServiceConfiguration,*ServiceConfiguration)
}

// VPCEndpointServiceConfigurationStatus defines the observed state of VPCEndpointServiceConfiguration.
#VPCEndpointServiceConfigurationStatus: {
	xpv1.#ResourceStatus
	atProvider?: #VPCEndpointServiceConfigurationObservation @go(AtProvider)
}

// VPCEndpointServiceConfiguration is the Schema for the VPCEndpointServiceConfigurations API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#VPCEndpointServiceConfiguration: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta                     @go(ObjectMeta)
	spec:      #VPCEndpointServiceConfigurationSpec   @go(Spec)
	status?:   #VPCEndpointServiceConfigurationStatus @go(Status)
}

// VPCEndpointServiceConfigurationList contains a list of VPCEndpointServiceConfigurations
#VPCEndpointServiceConfigurationList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#VPCEndpointServiceConfiguration] @go(Items,[]VPCEndpointServiceConfiguration)
}

// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/ec2/v1alpha1

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// TransitGatewayRouteTableParameters defines the desired state of TransitGatewayRouteTable
#TransitGatewayRouteTableParameters: {
	// Region is which region the TransitGatewayRouteTable will be created.
	// +kubebuilder:validation:Required
	region: string @go(Region)

	// The tags to apply to the transit gateway route table.
	tagSpecifications?: [...null | #TagSpecification] @go(TagSpecifications,[]*TagSpecification)

	#CustomTransitGatewayRouteTableParameters
}

// TransitGatewayRouteTableSpec defines the desired state of TransitGatewayRouteTable
#TransitGatewayRouteTableSpec: {
	xpv1.#ResourceSpec
	forProvider: #TransitGatewayRouteTableParameters @go(ForProvider)
}

// TransitGatewayRouteTableObservation defines the observed state of TransitGatewayRouteTable
#TransitGatewayRouteTableObservation: {
	// The creation time.
	creationTime?: null | metav1.#Time @go(CreationTime,*metav1.Time)

	// Indicates whether this is the default association route table for the transit
	// gateway.
	defaultAssociationRouteTable?: null | bool @go(DefaultAssociationRouteTable,*bool)

	// Indicates whether this is the default propagation route table for the transit
	// gateway.
	defaultPropagationRouteTable?: null | bool @go(DefaultPropagationRouteTable,*bool)

	// The state of the transit gateway route table.
	state?: null | string @go(State,*string)

	// Any tags assigned to the route table.
	tags?: [...null | #Tag] @go(Tags,[]*Tag)

	// The ID of the transit gateway.
	transitGatewayID?: null | string @go(TransitGatewayID,*string)

	// The ID of the transit gateway route table.
	transitGatewayRouteTableID?: null | string @go(TransitGatewayRouteTableID,*string)
}

// TransitGatewayRouteTableStatus defines the observed state of TransitGatewayRouteTable.
#TransitGatewayRouteTableStatus: {
	xpv1.#ResourceStatus
	atProvider?: #TransitGatewayRouteTableObservation @go(AtProvider)
}

// TransitGatewayRouteTable is the Schema for the TransitGatewayRouteTables API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#TransitGatewayRouteTable: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta              @go(ObjectMeta)
	spec:      #TransitGatewayRouteTableSpec   @go(Spec)
	status?:   #TransitGatewayRouteTableStatus @go(Status)
}

// TransitGatewayRouteTableList contains a list of TransitGatewayRouteTables
#TransitGatewayRouteTableList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#TransitGatewayRouteTable] @go(Items,[]TransitGatewayRouteTable)
}

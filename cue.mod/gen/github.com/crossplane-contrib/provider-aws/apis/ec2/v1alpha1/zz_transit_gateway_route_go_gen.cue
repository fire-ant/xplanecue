// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/ec2/v1alpha1

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// TransitGatewayRouteParameters defines the desired state of TransitGatewayRoute
#TransitGatewayRouteParameters: {
	// Region is which region the TransitGatewayRoute will be created.
	// +kubebuilder:validation:Required
	region: string @go(Region)

	// Indicates whether to drop traffic that matches this route.
	blackhole?: null | bool @go(Blackhole,*bool)

	// The CIDR range used for destination matches. Routing decisions are based
	// on the most specific match.
	// +kubebuilder:validation:Required
	destinationCIDRBlock?: null | string @go(DestinationCIDRBlock,*string)

	#CustomTransitGatewayRouteParameters
}

// TransitGatewayRouteSpec defines the desired state of TransitGatewayRoute
#TransitGatewayRouteSpec: {
	xpv1.#ResourceSpec
	forProvider: #TransitGatewayRouteParameters @go(ForProvider)
}

// TransitGatewayRouteObservation defines the observed state of TransitGatewayRoute
#TransitGatewayRouteObservation: {
	// The ID of the prefix list used for destination matches.
	prefixListID?: null | string @go(PrefixListID,*string)

	// The state of the route.
	state?: null | string @go(State,*string)

	// The attachments.
	transitGatewayAttachments?: [...null | #TransitGatewayRouteAttachment] @go(TransitGatewayAttachments,[]*TransitGatewayRouteAttachment)

	// The route type.
	type_?: null | string @go(Type,*string)
}

// TransitGatewayRouteStatus defines the observed state of TransitGatewayRoute.
#TransitGatewayRouteStatus: {
	xpv1.#ResourceStatus
	atProvider?: #TransitGatewayRouteObservation @go(AtProvider)
}

// TransitGatewayRoute is the Schema for the TransitGatewayRoutes API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#TransitGatewayRoute: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta         @go(ObjectMeta)
	spec:      #TransitGatewayRouteSpec   @go(Spec)
	status?:   #TransitGatewayRouteStatus @go(Status)
}

// TransitGatewayRouteList contains a list of TransitGatewayRoutes
#TransitGatewayRouteList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#TransitGatewayRoute] @go(Items,[]TransitGatewayRoute)
}

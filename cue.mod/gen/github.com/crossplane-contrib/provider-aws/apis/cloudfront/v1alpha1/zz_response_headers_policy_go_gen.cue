// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/cloudfront/v1alpha1

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// ResponseHeadersPolicyParameters defines the desired state of ResponseHeadersPolicy
#ResponseHeadersPolicyParameters: {
	// Region is which region the ResponseHeadersPolicy will be created.
	// +kubebuilder:validation:Required
	region: string @go(Region)

	// Contains metadata about the response headers policy, and a set of configurations
	// that specify the response headers.
	// +kubebuilder:validation:Required
	responseHeadersPolicyConfig?: null | #ResponseHeadersPolicyConfig @go(ResponseHeadersPolicyConfig,*ResponseHeadersPolicyConfig)

	#CustomResponseHeadersPolicyParameters
}

// ResponseHeadersPolicySpec defines the desired state of ResponseHeadersPolicy
#ResponseHeadersPolicySpec: {
	xpv1.#ResourceSpec
	forProvider: #ResponseHeadersPolicyParameters @go(ForProvider)
}

// ResponseHeadersPolicyObservation defines the observed state of ResponseHeadersPolicy
#ResponseHeadersPolicyObservation: {
	// The version identifier for the current version of the response headers policy.
	eTag?: null | string @go(ETag,*string)

	// The URL of the response headers policy.
	location?: null | string @go(Location,*string)

	// Contains a response headers policy.
	responseHeadersPolicy?: null | #ResponseHeadersPolicy_SDK @go(ResponseHeadersPolicy,*ResponseHeadersPolicy_SDK)
}

// ResponseHeadersPolicyStatus defines the observed state of ResponseHeadersPolicy.
#ResponseHeadersPolicyStatus: {
	xpv1.#ResourceStatus
	atProvider?: #ResponseHeadersPolicyObservation @go(AtProvider)
}

// ResponseHeadersPolicy is the Schema for the ResponseHeadersPolicies API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ResponseHeadersPolicy: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta           @go(ObjectMeta)
	spec:      #ResponseHeadersPolicySpec   @go(Spec)
	status?:   #ResponseHeadersPolicyStatus @go(Status)
}

// ResponseHeadersPolicyList contains a list of ResponseHeadersPolicies
#ResponseHeadersPolicyList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#ResponseHeadersPolicy] @go(Items,[]ResponseHeadersPolicy)
}

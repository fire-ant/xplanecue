// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/eks/v1alpha1

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// AddonParameters defines the desired state of Addon
#AddonParameters: {
	// Region is which region the Addon will be created.
	// +kubebuilder:validation:Required
	region: string @go(Region)

	// The name of the add-on. The name must match one of the names returned by
	// DescribeAddonVersions (https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonVersions.html).
	// +kubebuilder:validation:Required
	addonName?: null | string @go(AddonName,*string)

	// The version of the add-on. The version must match one of the versions returned
	// by DescribeAddonVersions (https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonVersions.html).
	addonVersion?: null | string @go(AddonVersion,*string)

	// How to resolve parameter value conflicts when migrating an existing add-on
	// to an Amazon EKS add-on.
	resolveConflicts?: null | string @go(ResolveConflicts,*string)

	// The Amazon Resource Name (ARN) of an existing IAM role to bind to the add-on's
	// service account. The role must be assigned the IAM permissions required by
	// the add-on. If you don't specify an existing IAM role, then the add-on uses
	// the permissions assigned to the node IAM role. For more information, see
	// Amazon EKS node IAM role (https://docs.aws.amazon.com/eks/latest/userguide/create-node-role.html)
	// in the Amazon EKS User Guide.
	//
	// To specify an existing IAM role, you must have an IAM OpenID Connect (OIDC)
	// provider created for your cluster. For more information, see Enabling IAM
	// roles for service accounts on your cluster (https://docs.aws.amazon.com/eks/latest/userguide/enable-iam-roles-for-service-accounts.html)
	// in the Amazon EKS User Guide.
	serviceAccountRoleARN?: null | string @go(ServiceAccountRoleARN,*string)

	// The metadata to apply to the cluster to assist with categorization and organization.
	// Each tag consists of a key and an optional value. You define both.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	#CustomAddonParameters
}

// AddonSpec defines the desired state of Addon
#AddonSpec: {
	xpv1.#ResourceSpec
	forProvider: #AddonParameters @go(ForProvider)
}

// AddonObservation defines the observed state of Addon
#AddonObservation: {
	// The Amazon Resource Name (ARN) of the add-on.
	addonARN?: null | string @go(AddonARN,*string)

	// The name of the cluster.
	clusterName?: null | string @go(ClusterName,*string)

	// The date and time that the add-on was created.
	createdAt?: null | metav1.#Time @go(CreatedAt,*metav1.Time)

	// An object that represents the health of the add-on.
	health?: null | #AddonHealth @go(Health,*AddonHealth)

	// The date and time that the add-on was last modified.
	modifiedAt?: null | metav1.#Time @go(ModifiedAt,*metav1.Time)

	// The status of the add-on.
	status?: null | string @go(Status,*string)
}

// AddonStatus defines the observed state of Addon.
#AddonStatus: {
	xpv1.#ResourceStatus
	atProvider?: #AddonObservation @go(AtProvider)
}

// Addon is the Schema for the Addons API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Addon: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)
	spec:      #AddonSpec         @go(Spec)
	status?:   #AddonStatus       @go(Status)
}

// AddonList contains a list of Addons
#AddonList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#Addon] @go(Items,[]Addon)
}

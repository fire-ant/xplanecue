// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/prometheusservice/v1alpha1

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// RuleGroupsNamespaceParameters defines the desired state of RuleGroupsNamespace
#RuleGroupsNamespaceParameters: {
	// Region is which region the RuleGroupsNamespace will be created.
	// +kubebuilder:validation:Required
	region: string @go(Region)

	// The namespace data that define the rule groups.
	// +kubebuilder:validation:Required
	data: bytes @go(Data,[]byte)

	// The rule groups namespace name.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// Optional, user-provided tags for this rule groups namespace.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	#CustomRuleGroupsNamespaceParameters
}

// RuleGroupsNamespaceSpec defines the desired state of RuleGroupsNamespace
#RuleGroupsNamespaceSpec: {
	xpv1.#ResourceSpec
	forProvider: #RuleGroupsNamespaceParameters @go(ForProvider)
}

// RuleGroupsNamespaceObservation defines the observed state of RuleGroupsNamespace
#RuleGroupsNamespaceObservation: {
	// The Amazon Resource Name (ARN) of this rule groups namespace.
	arn?: null | string @go(ARN,*string)

	// The status of rule groups namespace.
	status?: null | #RuleGroupsNamespaceStatus_SDK @go(Status,*RuleGroupsNamespaceStatus_SDK)
}

// RuleGroupsNamespaceStatus defines the observed state of RuleGroupsNamespace.
#RuleGroupsNamespaceStatus: {
	xpv1.#ResourceStatus
	atProvider?: #RuleGroupsNamespaceObservation @go(AtProvider)
}

// RuleGroupsNamespace is the Schema for the RuleGroupsNamespaces API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#RuleGroupsNamespace: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta         @go(ObjectMeta)
	spec:      #RuleGroupsNamespaceSpec   @go(Spec)
	status?:   #RuleGroupsNamespaceStatus @go(Status)
}

// RuleGroupsNamespaceList contains a list of RuleGroupsNamespaces
#RuleGroupsNamespaceList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#RuleGroupsNamespace] @go(Items,[]RuleGroupsNamespace)
}

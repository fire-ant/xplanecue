// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/cognitoidentity/v1alpha1

package v1alpha1

import xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"

// CustomIdentityPoolParameters includes the custom fields of IdentityPool.
#CustomIdentityPoolParameters: {
	// The Amazon Resource Names (ARN) of the OpenID Connect providers.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-aws/apis/iam/v1beta1.OpenIDConnectProvider
	// +crossplane:generate:reference:refFieldName=OpenIDConnectProviderARNRefs
	// +crossplane:generate:reference:selectorFieldName=OpenIDConnectProviderARNSelector
	// +optional
	openIdConnectProviderARNs?: [...null | string] @go(OpenIDConnectProviderARNs,[]*string)

	// OpenIDConnectProviderARNRefs is a list of references to OpenIDConnectProviderARNs.
	// +optional
	openIdConnectProviderARNRefs?: [...xpv1.#Reference] @go(OpenIDConnectProviderARNRefs,[]xpv1.Reference)

	// OpenIDConnectProviderARNSelector selects references to OpenIDConnectProviderARNs.
	// +optional
	openIdConnectProviderARNSelector?: null | xpv1.#Selector @go(OpenIDConnectProviderARNSelector,*xpv1.Selector)

	// An array of Amazon Cognito user pools and their client IDs.
	cognitoIdentityProviders?: [...null | #Provider] @go(CognitoIdentityProviders,[]*Provider)

	// TRUE if the identity pool supports unauthenticated logins.
	// +kubebuilder:validation:Required
	allowUnauthenticatedIdentities?: null | bool @go(AllowUnauthenticatedIdentities,*bool)
}

// Provider contains information to Cognito UserPools and UserPoolClients
// +kubebuilder:skipversion
#Provider: {
	// The client ID for the Amazon Cognito user pool client.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-aws/apis/cognitoidentityprovider/v1alpha1.UserPoolClient
	// + optional
	clientId?: null | string @go(ClientID,*string)

	// ClientIDRef is a reference to an ClientID.
	// +optional
	clientIdRef?: null | xpv1.#Reference @go(ClientIDRef,*xpv1.Reference)

	// ClientIDSelector selects references to ClientID.
	// +optional
	clientIdSelector?: null | xpv1.#Selector @go(ClientIDSelector,*xpv1.Selector)

	// The provider name for an Amazon Cognito user pool.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-aws/apis/cognitoidentityprovider/v1alpha1.UserPool
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-aws/apis/cognitoidentityprovider/v1alpha1.UserPoolName()
	// +optional
	providerName?: null | string @go(ProviderName,*string)

	// ProviderNameRef is a reference to an ProviderName.
	// +optional
	providerNameRef?: null | xpv1.#Reference @go(ProviderNameRef,*xpv1.Reference)

	// ProviderNameSelector selects references to ProviderName.
	// +optional
	providerNameSelector?: null | xpv1.#Selector @go(ProviderNameSelector,*xpv1.Selector)

	// Whether the server-side token validation is enabled for the identity providerâ€™s token.
	// +optional
	serverSideTokenCheck?: null | bool @go(ServerSideTokenCheck,*bool)
}

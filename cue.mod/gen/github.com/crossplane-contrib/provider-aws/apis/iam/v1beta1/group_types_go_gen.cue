// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/iam/v1beta1

package v1beta1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// GroupParameters define the desired state of an AWS IAM Group.
#GroupParameters: {
	// The path for the group name.
	// +optional
	path?: null | string @go(Path,*string)
}

// An GroupSpec defines the desired state of an IAM Group.
#GroupSpec: {
	xpv1.#ResourceSpec
	forProvider?: #GroupParameters @go(ForProvider)
}

// GroupObservation keeps the state for the external resource
#GroupObservation: {
	// The Amazon Resource Name (ARN) that identifies the group.
	arn?: string @go(ARN)

	// The stable and unique string identifying the group.
	groupId?: string @go(GroupID)
}

// An GroupStatus represents the observed state of an IAM Group.
#GroupStatus: {
	xpv1.#ResourceStatus
	atProvider?: #GroupObservation @go(AtProvider)
}

// An Group is a managed resource that represents an AWS IAM Group.
// An User is a managed resource that represents an AWS IAM User.
// +kubebuilder:printcolumn:name="ARN",type="string",JSONPath=".status.atProvider.arn"
// +kubebuilder:printcolumn:name="ID",type="string",JSONPath=".status.atProvider.groupId"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Group: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)
	spec:      #GroupSpec         @go(Spec)
	status?:   #GroupStatus       @go(Status)
}

// GroupList contains a list of IAM Groups
#GroupList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#Group] @go(Items,[]Group)
}

// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/iam/v1beta1

package v1beta1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// GroupPolicyAttachmentParameters define the desired state of an AWS GroupPolicyAttachment.
#GroupPolicyAttachmentParameters: {
	// PolicyARN is the Amazon Resource Name (ARN) of the IAM policy you want to
	// attach.
	// +immutable
	// +crossplane:generate:reference:type=Policy
	// +crossplane:generate:reference:extractor=PolicyARN()
	policyArn?: string @go(PolicyARN)

	// PolicyARNRef references an Policy to retrieve its Policy ARN.
	// +optional
	policyArnRef?: null | xpv1.#Reference @go(PolicyARNRef,*xpv1.Reference)

	// PolicyARNSelector selects a reference to an Policy to retrieve its
	// Policy ARN
	// +optional
	policyArnSelector?: null | xpv1.#Selector @go(PolicyARNSelector,*xpv1.Selector)

	// GroupName presents the name of the Group.
	// +immutable
	// +crossplane:generate:reference:type=Group
	groupName?: string @go(GroupName)

	// GroupNameRef references to an Group to retrieve its groupName
	// +optional
	groupNameRef?: null | xpv1.#Reference @go(GroupNameRef,*xpv1.Reference)

	// GroupNameSelector selects a reference to an Group to retrieve its groupName
	// +optional
	groupNameSelector?: null | xpv1.#Selector @go(GroupNameSelector,*xpv1.Selector)
}

// An GroupPolicyAttachmentSpec defines the desired state of an
// GroupPolicyAttachment.
#GroupPolicyAttachmentSpec: {
	xpv1.#ResourceSpec
	forProvider: #GroupPolicyAttachmentParameters @go(ForProvider)
}

// GroupPolicyAttachmentObservation keeps the state for the external resource
#GroupPolicyAttachmentObservation: {
	// AttachedPolicyARN is the arn for the attached policy. If nil, the policy
	// is not yet attached
	attachedPolicyArn: string @go(AttachedPolicyARN)
}

// An GroupPolicyAttachmentStatus represents the observed state of an
// GroupPolicyAttachment.
#GroupPolicyAttachmentStatus: {
	xpv1.#ResourceStatus
	atProvider?: #GroupPolicyAttachmentObservation @go(AtProvider)
}

// An GroupPolicyAttachment is a managed resource that represents an AWS IAM
// Group policy attachment.
// +kubebuilder:printcolumn:name="GROUPNAME",type="string",JSONPath=".spec.forProvider.groupName"
// +kubebuilder:printcolumn:name="POLICYARN",type="string",JSONPath=".spec.forProvider.policyArn"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#GroupPolicyAttachment: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta           @go(ObjectMeta)
	spec:      #GroupPolicyAttachmentSpec   @go(Spec)
	status?:   #GroupPolicyAttachmentStatus @go(Status)
}

// GroupPolicyAttachmentList contains a list of GroupPolicyAttachments
#GroupPolicyAttachmentList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#GroupPolicyAttachment] @go(Items,[]GroupPolicyAttachment)
}

// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/cognitoidentityprovider/v1alpha1

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// UserPoolClientParameters defines the desired state of UserPoolClient
#UserPoolClientParameters: {
	// Region is which region the UserPoolClient will be created.
	// +kubebuilder:validation:Required
	region: string @go(Region)

	// The time limit, between 5 minutes and 1 day, after which the access token
	// is no longer valid and can't be used. If you supply a TokenValidityUnits
	// value, you will override the default time unit.
	accessTokenValidity?: null | int64 @go(AccessTokenValidity,*int64)

	// The allowed OAuth flows.
	//
	// Set to code to initiate a code grant flow, which provides an authorization
	// code as the response. This code can be exchanged for access tokens with the
	// token endpoint.
	//
	// Set to implicit to specify that the client should get the access token (and,
	// optionally, ID token, based on scopes) directly.
	//
	// Set to client_credentials to specify that the client should get the access
	// token (and, optionally, ID token, based on scopes) from the token endpoint
	// using a combination of client and client_secret.
	allowedOAuthFlows?: [...null | string] @go(AllowedOAuthFlows,[]*string)

	// Set to true if the client is allowed to follow the OAuth protocol when interacting
	// with Amazon Cognito user pools.
	allowedOAuthFlowsUserPoolClient?: null | bool @go(AllowedOAuthFlowsUserPoolClient,*bool)

	// The allowed OAuth scopes. Possible values provided by OAuth are: phone, email,
	// openid, and profile. Possible values provided by Amazon Web Services are:
	// aws.cognito.signin.user.admin. Custom scopes created in Resource Servers
	// are also supported.
	allowedOAuthScopes?: [...null | string] @go(AllowedOAuthScopes,[]*string)

	// The user pool analytics configuration for collecting metrics and sending
	// them to your Amazon Pinpoint campaign.
	//
	// In Amazon Web Services Regions where Amazon Pinpoint isn't available, user
	// pools only support sending events to Amazon Pinpoint projects in Amazon Web
	// Services Region us-east-1. In Regions where Amazon Pinpoint is available,
	// user pools support sending events to Amazon Pinpoint projects within that
	// same Region.
	analyticsConfiguration?: null | #AnalyticsConfigurationType @go(AnalyticsConfiguration,*AnalyticsConfigurationType)

	// A list of allowed redirect (callback) URLs for the identity providers.
	//
	// A redirect URI must:
	//
	//    * Be an absolute URI.
	//
	//    * Be registered with the authorization server.
	//
	//    * Not include a fragment component.
	//
	// See OAuth 2.0 - Redirection Endpoint (https://tools.ietf.org/html/rfc6749#section-3.1.2).
	//
	// Amazon Cognito requires HTTPS over HTTP except for http://localhost for testing
	// purposes only.
	//
	// App callback URLs such as myapp://example are also supported.
	callbackURLs?: [...null | string] @go(CallbackURLs,[]*string)

	// The client name for the user pool client you would like to create.
	// +kubebuilder:validation:Required
	clientName?: null | string @go(ClientName,*string)

	// The default redirect URI. Must be in the CallbackURLs list.
	//
	// A redirect URI must:
	//
	//    * Be an absolute URI.
	//
	//    * Be registered with the authorization server.
	//
	//    * Not include a fragment component.
	//
	// See OAuth 2.0 - Redirection Endpoint (https://tools.ietf.org/html/rfc6749#section-3.1.2).
	//
	// Amazon Cognito requires HTTPS over HTTP except for http://localhost for testing
	// purposes only.
	//
	// App callback URLs such as myapp://example are also supported.
	defaultRedirectURI?: null | string @go(DefaultRedirectURI,*string)

	// Activates or deactivates token revocation. For more information about revoking
	// tokens, see RevokeToken (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_RevokeToken.html).
	//
	// If you don't include this parameter, token revocation is automatically activated
	// for the new user pool client.
	enableTokenRevocation?: null | bool @go(EnableTokenRevocation,*bool)

	// The authentication flows that are supported by the user pool clients. Flow
	// names without the ALLOW_ prefix are no longer supported, in favor of new
	// names with the ALLOW_ prefix.
	//
	// Values with ALLOW_ prefix must be used only along with the ALLOW_ prefix.
	//
	// Valid values include:
	//
	//    * ALLOW_ADMIN_USER_PASSWORD_AUTH: Enable admin based user password authentication
	//    flow ADMIN_USER_PASSWORD_AUTH. This setting replaces the ADMIN_NO_SRP_AUTH
	//    setting. With this authentication flow, Amazon Cognito receives the password
	//    in the request instead of using the Secure Remote Password (SRP) protocol
	//    to verify passwords.
	//
	//    * ALLOW_CUSTOM_AUTH: Enable Lambda trigger based authentication.
	//
	//    * ALLOW_USER_PASSWORD_AUTH: Enable user password-based authentication.
	//    In this flow, Amazon Cognito receives the password in the request instead
	//    of using the SRP protocol to verify passwords.
	//
	//    * ALLOW_USER_SRP_AUTH: Enable SRP-based authentication.
	//
	//    * ALLOW_REFRESH_TOKEN_AUTH: Enable authflow to refresh tokens.
	explicitAuthFlows?: [...null | string] @go(ExplicitAuthFlows,[]*string)

	// Boolean to specify whether you want to generate a secret for the user pool
	// client being created.
	generateSecret?: null | bool @go(GenerateSecret,*bool)

	// The time limit, between 5 minutes and 1 day, after which the access token
	// is no longer valid and can't be used. If you supply a TokenValidityUnits
	// value, you will override the default time unit.
	idTokenValidity?: null | int64 @go(IDTokenValidity,*int64)

	// A list of allowed logout URLs for the identity providers.
	logoutURLs?: [...null | string] @go(LogoutURLs,[]*string)

	// Errors and responses that you want Amazon Cognito APIs to return during authentication,
	// account confirmation, and password recovery when the user doesn't exist in
	// the user pool. When set to ENABLED and the user doesn't exist, authentication
	// returns an error indicating either the username or password was incorrect.
	// Account confirmation and password recovery return a response indicating a
	// code was sent to a simulated destination. When set to LEGACY, those APIs
	// return a UserNotFoundException exception if the user doesn't exist in the
	// user pool.
	//
	// Valid values include:
	//
	//    * ENABLED - This prevents user existence-related errors.
	//
	//    * LEGACY - This represents the early behavior of Amazon Cognito where
	//    user existence related errors aren't prevented.
	preventUserExistenceErrors?: null | string @go(PreventUserExistenceErrors,*string)

	// The read attributes.
	readAttributes?: [...null | string] @go(ReadAttributes,[]*string)

	// The time limit, in days, after which the refresh token is no longer valid
	// and can't be used.
	refreshTokenValidity?: null | int64 @go(RefreshTokenValidity,*int64)

	// A list of provider names for the identity providers that are supported on
	// this client. The following are supported: COGNITO, Facebook, Google and LoginWithAmazon.
	supportedIdentityProviders?: [...null | string] @go(SupportedIdentityProviders,[]*string)

	// The units in which the validity times are represented. Default for RefreshToken
	// is days, and default for ID and access tokens are hours.
	tokenValidityUnits?: null | #TokenValidityUnitsType @go(TokenValidityUnits,*TokenValidityUnitsType)

	// The user pool attributes that the app client can write to.
	//
	// If your app client allows users to sign in through an identity provider,
	// this array must include all attributes that you have mapped to identity provider
	// attributes. Amazon Cognito updates mapped attributes when users sign in to
	// your application through an identity provider. If your app client does not
	// have write access to a mapped attribute, Amazon Cognito throws an error when
	// it tries to update the attribute. For more information, see Specifying Identity
	// Provider Attribute Mappings for Your user pool (https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-specifying-attribute-mapping.html).
	writeAttributes?: [...null | string] @go(WriteAttributes,[]*string)

	#CustomUserPoolClientParameters
}

// UserPoolClientSpec defines the desired state of UserPoolClient
#UserPoolClientSpec: {
	xpv1.#ResourceSpec
	forProvider: #UserPoolClientParameters @go(ForProvider)
}

// UserPoolClientObservation defines the observed state of UserPoolClient
#UserPoolClientObservation: {
	// The ID of the client associated with the user pool.
	clientID?: null | string @go(ClientID,*string)

	// The client secret from the user pool request of the client type.
	clientSecret?: null | string @go(ClientSecret,*string)

	// The date the user pool client was created.
	creationDate?: null | metav1.#Time @go(CreationDate,*metav1.Time)

	// The date the user pool client was last modified.
	lastModifiedDate?: null | metav1.#Time @go(LastModifiedDate,*metav1.Time)

	// The user pool ID for the user pool client.
	userPoolID?: null | string @go(UserPoolID,*string)
}

// UserPoolClientStatus defines the observed state of UserPoolClient.
#UserPoolClientStatus: {
	xpv1.#ResourceStatus
	atProvider?: #UserPoolClientObservation @go(AtProvider)
}

// UserPoolClient is the Schema for the UserPoolClients API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#UserPoolClient: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta    @go(ObjectMeta)
	spec:      #UserPoolClientSpec   @go(Spec)
	status?:   #UserPoolClientStatus @go(Status)
}

// UserPoolClientList contains a list of UserPoolClients
#UserPoolClientList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#UserPoolClient] @go(Items,[]UserPoolClient)
}

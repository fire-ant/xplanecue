// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/Azure/azure-storage-blob-go/azblob

package azblob

import (
	"time"
	"encoding/xml"
)

// ETag is an entity tag.
#ETag: string // #enumETag

#enumETag:
	#ETagNone |
	#ETagAny

// ETagNone represents an empty entity tag.
#ETagNone: #ETag & ""

// ETagAny matches any entity tag.
#ETagAny: #ETag & "*"

// Metadata contains metadata key/value pairs.
#Metadata: {[string]: string}

_#mdPrefix: "x-ms-meta-"

_#mdPrefixLen: int & 10

// Marker represents an opaque value used in paged responses.
#Marker: {
	Val?: null | string @go(,*string)
}

// AccessTierType enumerates the values for access tier type.
#AccessTierType: string // #enumAccessTierType

#enumAccessTierType:
	#AccessTierArchive |
	#AccessTierCool |
	#AccessTierHot |
	#AccessTierNone |
	#AccessTierP10 |
	#AccessTierP20 |
	#AccessTierP30 |
	#AccessTierP4 |
	#AccessTierP40 |
	#AccessTierP50 |
	#AccessTierP6

// AccessTierArchive ...
#AccessTierArchive: #AccessTierType & "Archive"

// AccessTierCool ...
#AccessTierCool: #AccessTierType & "Cool"

// AccessTierHot ...
#AccessTierHot: #AccessTierType & "Hot"

// AccessTierNone represents an empty AccessTierType.
#AccessTierNone: #AccessTierType & ""

// AccessTierP10 ...
#AccessTierP10: #AccessTierType & "P10"

// AccessTierP20 ...
#AccessTierP20: #AccessTierType & "P20"

// AccessTierP30 ...
#AccessTierP30: #AccessTierType & "P30"

// AccessTierP4 ...
#AccessTierP4: #AccessTierType & "P4"

// AccessTierP40 ...
#AccessTierP40: #AccessTierType & "P40"

// AccessTierP50 ...
#AccessTierP50: #AccessTierType & "P50"

// AccessTierP6 ...
#AccessTierP6: #AccessTierType & "P6"

// AccountKindType enumerates the values for account kind type.
#AccountKindType: string // #enumAccountKindType

#enumAccountKindType:
	#AccountKindBlobStorage |
	#AccountKindNone |
	#AccountKindStorage |
	#AccountKindStorageV2

// AccountKindBlobStorage ...
#AccountKindBlobStorage: #AccountKindType & "BlobStorage"

// AccountKindNone represents an empty AccountKindType.
#AccountKindNone: #AccountKindType & ""

// AccountKindStorage ...
#AccountKindStorage: #AccountKindType & "Storage"

// AccountKindStorageV2 ...
#AccountKindStorageV2: #AccountKindType & "StorageV2"

// ArchiveStatusType enumerates the values for archive status type.
#ArchiveStatusType: string // #enumArchiveStatusType

#enumArchiveStatusType:
	#ArchiveStatusNone |
	#ArchiveStatusRehydratePendingToCool |
	#ArchiveStatusRehydratePendingToHot

// ArchiveStatusNone represents an empty ArchiveStatusType.
#ArchiveStatusNone: #ArchiveStatusType & ""

// ArchiveStatusRehydratePendingToCool ...
#ArchiveStatusRehydratePendingToCool: #ArchiveStatusType & "rehydrate-pending-to-cool"

// ArchiveStatusRehydratePendingToHot ...
#ArchiveStatusRehydratePendingToHot: #ArchiveStatusType & "rehydrate-pending-to-hot"

// BlobType enumerates the values for blob type.
#BlobType: string // #enumBlobType

#enumBlobType:
	#BlobAppendBlob |
	#BlobBlockBlob |
	#BlobNone |
	#BlobPageBlob

// BlobAppendBlob ...
#BlobAppendBlob: #BlobType & "AppendBlob"

// BlobBlockBlob ...
#BlobBlockBlob: #BlobType & "BlockBlob"

// BlobNone represents an empty BlobType.
#BlobNone: #BlobType & ""

// BlobPageBlob ...
#BlobPageBlob: #BlobType & "PageBlob"

// BlockListType enumerates the values for block list type.
#BlockListType: string // #enumBlockListType

#enumBlockListType:
	#BlockListAll |
	#BlockListCommitted |
	#BlockListNone |
	#BlockListUncommitted

// BlockListAll ...
#BlockListAll: #BlockListType & "all"

// BlockListCommitted ...
#BlockListCommitted: #BlockListType & "committed"

// BlockListNone represents an empty BlockListType.
#BlockListNone: #BlockListType & ""

// BlockListUncommitted ...
#BlockListUncommitted: #BlockListType & "uncommitted"

// CopyStatusType enumerates the values for copy status type.
#CopyStatusType: string // #enumCopyStatusType

#enumCopyStatusType:
	#CopyStatusAborted |
	#CopyStatusFailed |
	#CopyStatusNone |
	#CopyStatusPending |
	#CopyStatusSuccess

// CopyStatusAborted ...
#CopyStatusAborted: #CopyStatusType & "aborted"

// CopyStatusFailed ...
#CopyStatusFailed: #CopyStatusType & "failed"

// CopyStatusNone represents an empty CopyStatusType.
#CopyStatusNone: #CopyStatusType & ""

// CopyStatusPending ...
#CopyStatusPending: #CopyStatusType & "pending"

// CopyStatusSuccess ...
#CopyStatusSuccess: #CopyStatusType & "success"

// DeleteSnapshotsOptionType enumerates the values for delete snapshots option type.
#DeleteSnapshotsOptionType: string // #enumDeleteSnapshotsOptionType

#enumDeleteSnapshotsOptionType:
	#DeleteSnapshotsOptionInclude |
	#DeleteSnapshotsOptionNone |
	#DeleteSnapshotsOptionOnly

// DeleteSnapshotsOptionInclude ...
#DeleteSnapshotsOptionInclude: #DeleteSnapshotsOptionType & "include"

// DeleteSnapshotsOptionNone represents an empty DeleteSnapshotsOptionType.
#DeleteSnapshotsOptionNone: #DeleteSnapshotsOptionType & ""

// DeleteSnapshotsOptionOnly ...
#DeleteSnapshotsOptionOnly: #DeleteSnapshotsOptionType & "only"

// GeoReplicationStatusType enumerates the values for geo replication status type.
#GeoReplicationStatusType: string // #enumGeoReplicationStatusType

#enumGeoReplicationStatusType:
	#GeoReplicationStatusBootstrap |
	#GeoReplicationStatusLive |
	#GeoReplicationStatusNone |
	#GeoReplicationStatusUnavailable

// GeoReplicationStatusBootstrap ...
#GeoReplicationStatusBootstrap: #GeoReplicationStatusType & "bootstrap"

// GeoReplicationStatusLive ...
#GeoReplicationStatusLive: #GeoReplicationStatusType & "live"

// GeoReplicationStatusNone represents an empty GeoReplicationStatusType.
#GeoReplicationStatusNone: #GeoReplicationStatusType & ""

// GeoReplicationStatusUnavailable ...
#GeoReplicationStatusUnavailable: #GeoReplicationStatusType & "unavailable"

// LeaseDurationType enumerates the values for lease duration type.
#LeaseDurationType: string // #enumLeaseDurationType

#enumLeaseDurationType:
	#LeaseDurationFixed |
	#LeaseDurationInfinite |
	#LeaseDurationNone

// LeaseDurationFixed ...
#LeaseDurationFixed: #LeaseDurationType & "fixed"

// LeaseDurationInfinite ...
#LeaseDurationInfinite: #LeaseDurationType & "infinite"

// LeaseDurationNone represents an empty LeaseDurationType.
#LeaseDurationNone: #LeaseDurationType & ""

// LeaseStateType enumerates the values for lease state type.
#LeaseStateType: string // #enumLeaseStateType

#enumLeaseStateType:
	#LeaseStateAvailable |
	#LeaseStateBreaking |
	#LeaseStateBroken |
	#LeaseStateExpired |
	#LeaseStateLeased |
	#LeaseStateNone

// LeaseStateAvailable ...
#LeaseStateAvailable: #LeaseStateType & "available"

// LeaseStateBreaking ...
#LeaseStateBreaking: #LeaseStateType & "breaking"

// LeaseStateBroken ...
#LeaseStateBroken: #LeaseStateType & "broken"

// LeaseStateExpired ...
#LeaseStateExpired: #LeaseStateType & "expired"

// LeaseStateLeased ...
#LeaseStateLeased: #LeaseStateType & "leased"

// LeaseStateNone represents an empty LeaseStateType.
#LeaseStateNone: #LeaseStateType & ""

// LeaseStatusType enumerates the values for lease status type.
#LeaseStatusType: string // #enumLeaseStatusType

#enumLeaseStatusType:
	#LeaseStatusLocked |
	#LeaseStatusNone |
	#LeaseStatusUnlocked

// LeaseStatusLocked ...
#LeaseStatusLocked: #LeaseStatusType & "locked"

// LeaseStatusNone represents an empty LeaseStatusType.
#LeaseStatusNone: #LeaseStatusType & ""

// LeaseStatusUnlocked ...
#LeaseStatusUnlocked: #LeaseStatusType & "unlocked"

// ListBlobsIncludeItemType enumerates the values for list blobs include item type.
#ListBlobsIncludeItemType: string // #enumListBlobsIncludeItemType

#enumListBlobsIncludeItemType:
	#ListBlobsIncludeItemCopy |
	#ListBlobsIncludeItemDeleted |
	#ListBlobsIncludeItemMetadata |
	#ListBlobsIncludeItemNone |
	#ListBlobsIncludeItemSnapshots |
	#ListBlobsIncludeItemUncommittedblobs

// ListBlobsIncludeItemCopy ...
#ListBlobsIncludeItemCopy: #ListBlobsIncludeItemType & "copy"

// ListBlobsIncludeItemDeleted ...
#ListBlobsIncludeItemDeleted: #ListBlobsIncludeItemType & "deleted"

// ListBlobsIncludeItemMetadata ...
#ListBlobsIncludeItemMetadata: #ListBlobsIncludeItemType & "metadata"

// ListBlobsIncludeItemNone represents an empty ListBlobsIncludeItemType.
#ListBlobsIncludeItemNone: #ListBlobsIncludeItemType & ""

// ListBlobsIncludeItemSnapshots ...
#ListBlobsIncludeItemSnapshots: #ListBlobsIncludeItemType & "snapshots"

// ListBlobsIncludeItemUncommittedblobs ...
#ListBlobsIncludeItemUncommittedblobs: #ListBlobsIncludeItemType & "uncommittedblobs"

// ListContainersIncludeType enumerates the values for list containers include type.
#ListContainersIncludeType: string // #enumListContainersIncludeType

#enumListContainersIncludeType:
	#ListContainersIncludeMetadata |
	#ListContainersIncludeNone

// ListContainersIncludeMetadata ...
#ListContainersIncludeMetadata: #ListContainersIncludeType & "metadata"

// ListContainersIncludeNone represents an empty ListContainersIncludeType.
#ListContainersIncludeNone: #ListContainersIncludeType & ""

// PublicAccessType enumerates the values for public access type.
#PublicAccessType: string // #enumPublicAccessType

#enumPublicAccessType:
	#PublicAccessBlob |
	#PublicAccessContainer |
	#PublicAccessNone

// PublicAccessBlob ...
#PublicAccessBlob: #PublicAccessType & "blob"

// PublicAccessContainer ...
#PublicAccessContainer: #PublicAccessType & "container"

// PublicAccessNone represents an empty PublicAccessType.
#PublicAccessNone: #PublicAccessType & ""

// SequenceNumberActionType enumerates the values for sequence number action type.
#SequenceNumberActionType: string // #enumSequenceNumberActionType

#enumSequenceNumberActionType:
	#SequenceNumberActionIncrement |
	#SequenceNumberActionMax |
	#SequenceNumberActionNone |
	#SequenceNumberActionUpdate

// SequenceNumberActionIncrement ...
#SequenceNumberActionIncrement: #SequenceNumberActionType & "increment"

// SequenceNumberActionMax ...
#SequenceNumberActionMax: #SequenceNumberActionType & "max"

// SequenceNumberActionNone represents an empty SequenceNumberActionType.
#SequenceNumberActionNone: #SequenceNumberActionType & ""

// SequenceNumberActionUpdate ...
#SequenceNumberActionUpdate: #SequenceNumberActionType & "update"

// SkuNameType enumerates the values for sku name type.
#SkuNameType: string // #enumSkuNameType

#enumSkuNameType:
	#SkuNameNone |
	#SkuNamePremiumLRS |
	#SkuNameStandardGRS |
	#SkuNameStandardLRS |
	#SkuNameStandardRAGRS |
	#SkuNameStandardZRS

// SkuNameNone represents an empty SkuNameType.
#SkuNameNone: #SkuNameType & ""

// SkuNamePremiumLRS ...
#SkuNamePremiumLRS: #SkuNameType & "Premium_LRS"

// SkuNameStandardGRS ...
#SkuNameStandardGRS: #SkuNameType & "Standard_GRS"

// SkuNameStandardLRS ...
#SkuNameStandardLRS: #SkuNameType & "Standard_LRS"

// SkuNameStandardRAGRS ...
#SkuNameStandardRAGRS: #SkuNameType & "Standard_RAGRS"

// SkuNameStandardZRS ...
#SkuNameStandardZRS: #SkuNameType & "Standard_ZRS"

// StorageErrorCodeType enumerates the values for storage error code type.
#StorageErrorCodeType: string // #enumStorageErrorCodeType

#enumStorageErrorCodeType:
	#StorageErrorCodeAccountAlreadyExists |
	#StorageErrorCodeAccountBeingCreated |
	#StorageErrorCodeAccountIsDisabled |
	#StorageErrorCodeAppendPositionConditionNotMet |
	#StorageErrorCodeAuthenticationFailed |
	#StorageErrorCodeAuthorizationFailure |
	#StorageErrorCodeBlobAlreadyExists |
	#StorageErrorCodeBlobArchived |
	#StorageErrorCodeBlobBeingRehydrated |
	#StorageErrorCodeBlobNotArchived |
	#StorageErrorCodeBlobNotFound |
	#StorageErrorCodeBlobOverwritten |
	#StorageErrorCodeBlobTierInadequateForContentLength |
	#StorageErrorCodeBlockCountExceedsLimit |
	#StorageErrorCodeBlockListTooLong |
	#StorageErrorCodeCannotChangeToLowerTier |
	#StorageErrorCodeCannotVerifyCopySource |
	#StorageErrorCodeConditionHeadersNotSupported |
	#StorageErrorCodeConditionNotMet |
	#StorageErrorCodeContainerAlreadyExists |
	#StorageErrorCodeContainerBeingDeleted |
	#StorageErrorCodeContainerDisabled |
	#StorageErrorCodeContainerNotFound |
	#StorageErrorCodeContentLengthLargerThanTierLimit |
	#StorageErrorCodeCopyAcrossAccountsNotSupported |
	#StorageErrorCodeCopyIDMismatch |
	#StorageErrorCodeEmptyMetadataKey |
	#StorageErrorCodeFeatureVersionMismatch |
	#StorageErrorCodeIncrementalCopyBlobMismatch |
	#StorageErrorCodeIncrementalCopyOfEralierVersionSnapshotNotAllowed |
	#StorageErrorCodeIncrementalCopySourceMustBeSnapshot |
	#StorageErrorCodeInfiniteLeaseDurationRequired |
	#StorageErrorCodeInsufficientAccountPermissions |
	#StorageErrorCodeInternalError |
	#StorageErrorCodeInvalidAuthenticationInfo |
	#StorageErrorCodeInvalidBlobOrBlock |
	#StorageErrorCodeInvalidBlobTier |
	#StorageErrorCodeInvalidBlobType |
	#StorageErrorCodeInvalidBlockID |
	#StorageErrorCodeInvalidBlockList |
	#StorageErrorCodeInvalidHeaderValue |
	#StorageErrorCodeInvalidHTTPVerb |
	#StorageErrorCodeInvalidInput |
	#StorageErrorCodeInvalidMd5 |
	#StorageErrorCodeInvalidMetadata |
	#StorageErrorCodeInvalidOperation |
	#StorageErrorCodeInvalidPageRange |
	#StorageErrorCodeInvalidQueryParameterValue |
	#StorageErrorCodeInvalidRange |
	#StorageErrorCodeInvalidResourceName |
	#StorageErrorCodeInvalidSourceBlobType |
	#StorageErrorCodeInvalidSourceBlobURL |
	#StorageErrorCodeInvalidURI |
	#StorageErrorCodeInvalidVersionForPageBlobOperation |
	#StorageErrorCodeInvalidXMLDocument |
	#StorageErrorCodeInvalidXMLNodeValue |
	#StorageErrorCodeLeaseAlreadyBroken |
	#StorageErrorCodeLeaseAlreadyPresent |
	#StorageErrorCodeLeaseIDMismatchWithBlobOperation |
	#StorageErrorCodeLeaseIDMismatchWithContainerOperation |
	#StorageErrorCodeLeaseIDMismatchWithLeaseOperation |
	#StorageErrorCodeLeaseIDMissing |
	#StorageErrorCodeLeaseIsBreakingAndCannotBeAcquired |
	#StorageErrorCodeLeaseIsBreakingAndCannotBeChanged |
	#StorageErrorCodeLeaseIsBrokenAndCannotBeRenewed |
	#StorageErrorCodeLeaseLost |
	#StorageErrorCodeLeaseNotPresentWithBlobOperation |
	#StorageErrorCodeLeaseNotPresentWithContainerOperation |
	#StorageErrorCodeLeaseNotPresentWithLeaseOperation |
	#StorageErrorCodeMaxBlobSizeConditionNotMet |
	#StorageErrorCodeMd5Mismatch |
	#StorageErrorCodeMetadataTooLarge |
	#StorageErrorCodeMissingContentLengthHeader |
	#StorageErrorCodeMissingRequiredHeader |
	#StorageErrorCodeMissingRequiredQueryParameter |
	#StorageErrorCodeMissingRequiredXMLNode |
	#StorageErrorCodeMultipleConditionHeadersNotSupported |
	#StorageErrorCodeNone |
	#StorageErrorCodeNoPendingCopyOperation |
	#StorageErrorCodeOperationNotAllowedOnIncrementalCopyBlob |
	#StorageErrorCodeOperationTimedOut |
	#StorageErrorCodeOutOfRangeInput |
	#StorageErrorCodeOutOfRangeQueryParameterValue |
	#StorageErrorCodePendingCopyOperation |
	#StorageErrorCodePreviousSnapshotCannotBeNewer |
	#StorageErrorCodePreviousSnapshotNotFound |
	#StorageErrorCodePreviousSnapshotOperationNotSupported |
	#StorageErrorCodeRequestBodyTooLarge |
	#StorageErrorCodeRequestURLFailedToParse |
	#StorageErrorCodeResourceAlreadyExists |
	#StorageErrorCodeResourceNotFound |
	#StorageErrorCodeResourceTypeMismatch |
	#StorageErrorCodeSequenceNumberConditionNotMet |
	#StorageErrorCodeSequenceNumberIncrementTooLarge |
	#StorageErrorCodeServerBusy |
	#StorageErrorCodeSnaphotOperationRateExceeded |
	#StorageErrorCodeSnapshotCountExceeded |
	#StorageErrorCodeSnapshotsPresent |
	#StorageErrorCodeSourceConditionNotMet |
	#StorageErrorCodeSystemInUse |
	#StorageErrorCodeTargetConditionNotMet |
	#StorageErrorCodeUnauthorizedBlobOverwrite |
	#StorageErrorCodeUnsupportedHeader |
	#StorageErrorCodeUnsupportedHTTPVerb |
	#StorageErrorCodeUnsupportedQueryParameter |
	#StorageErrorCodeUnsupportedXMLNode

// StorageErrorCodeAccountAlreadyExists ...
#StorageErrorCodeAccountAlreadyExists: #StorageErrorCodeType & "AccountAlreadyExists"

// StorageErrorCodeAccountBeingCreated ...
#StorageErrorCodeAccountBeingCreated: #StorageErrorCodeType & "AccountBeingCreated"

// StorageErrorCodeAccountIsDisabled ...
#StorageErrorCodeAccountIsDisabled: #StorageErrorCodeType & "AccountIsDisabled"

// StorageErrorCodeAppendPositionConditionNotMet ...
#StorageErrorCodeAppendPositionConditionNotMet: #StorageErrorCodeType & "AppendPositionConditionNotMet"

// StorageErrorCodeAuthenticationFailed ...
#StorageErrorCodeAuthenticationFailed: #StorageErrorCodeType & "AuthenticationFailed"

// StorageErrorCodeAuthorizationFailure ...
#StorageErrorCodeAuthorizationFailure: #StorageErrorCodeType & "AuthorizationFailure"

// StorageErrorCodeBlobAlreadyExists ...
#StorageErrorCodeBlobAlreadyExists: #StorageErrorCodeType & "BlobAlreadyExists"

// StorageErrorCodeBlobArchived ...
#StorageErrorCodeBlobArchived: #StorageErrorCodeType & "BlobArchived"

// StorageErrorCodeBlobBeingRehydrated ...
#StorageErrorCodeBlobBeingRehydrated: #StorageErrorCodeType & "BlobBeingRehydrated"

// StorageErrorCodeBlobNotArchived ...
#StorageErrorCodeBlobNotArchived: #StorageErrorCodeType & "BlobNotArchived"

// StorageErrorCodeBlobNotFound ...
#StorageErrorCodeBlobNotFound: #StorageErrorCodeType & "BlobNotFound"

// StorageErrorCodeBlobOverwritten ...
#StorageErrorCodeBlobOverwritten: #StorageErrorCodeType & "BlobOverwritten"

// StorageErrorCodeBlobTierInadequateForContentLength ...
#StorageErrorCodeBlobTierInadequateForContentLength: #StorageErrorCodeType & "BlobTierInadequateForContentLength"

// StorageErrorCodeBlockCountExceedsLimit ...
#StorageErrorCodeBlockCountExceedsLimit: #StorageErrorCodeType & "BlockCountExceedsLimit"

// StorageErrorCodeBlockListTooLong ...
#StorageErrorCodeBlockListTooLong: #StorageErrorCodeType & "BlockListTooLong"

// StorageErrorCodeCannotChangeToLowerTier ...
#StorageErrorCodeCannotChangeToLowerTier: #StorageErrorCodeType & "CannotChangeToLowerTier"

// StorageErrorCodeCannotVerifyCopySource ...
#StorageErrorCodeCannotVerifyCopySource: #StorageErrorCodeType & "CannotVerifyCopySource"

// StorageErrorCodeConditionHeadersNotSupported ...
#StorageErrorCodeConditionHeadersNotSupported: #StorageErrorCodeType & "ConditionHeadersNotSupported"

// StorageErrorCodeConditionNotMet ...
#StorageErrorCodeConditionNotMet: #StorageErrorCodeType & "ConditionNotMet"

// StorageErrorCodeContainerAlreadyExists ...
#StorageErrorCodeContainerAlreadyExists: #StorageErrorCodeType & "ContainerAlreadyExists"

// StorageErrorCodeContainerBeingDeleted ...
#StorageErrorCodeContainerBeingDeleted: #StorageErrorCodeType & "ContainerBeingDeleted"

// StorageErrorCodeContainerDisabled ...
#StorageErrorCodeContainerDisabled: #StorageErrorCodeType & "ContainerDisabled"

// StorageErrorCodeContainerNotFound ...
#StorageErrorCodeContainerNotFound: #StorageErrorCodeType & "ContainerNotFound"

// StorageErrorCodeContentLengthLargerThanTierLimit ...
#StorageErrorCodeContentLengthLargerThanTierLimit: #StorageErrorCodeType & "ContentLengthLargerThanTierLimit"

// StorageErrorCodeCopyAcrossAccountsNotSupported ...
#StorageErrorCodeCopyAcrossAccountsNotSupported: #StorageErrorCodeType & "CopyAcrossAccountsNotSupported"

// StorageErrorCodeCopyIDMismatch ...
#StorageErrorCodeCopyIDMismatch: #StorageErrorCodeType & "CopyIdMismatch"

// StorageErrorCodeEmptyMetadataKey ...
#StorageErrorCodeEmptyMetadataKey: #StorageErrorCodeType & "EmptyMetadataKey"

// StorageErrorCodeFeatureVersionMismatch ...
#StorageErrorCodeFeatureVersionMismatch: #StorageErrorCodeType & "FeatureVersionMismatch"

// StorageErrorCodeIncrementalCopyBlobMismatch ...
#StorageErrorCodeIncrementalCopyBlobMismatch: #StorageErrorCodeType & "IncrementalCopyBlobMismatch"

// StorageErrorCodeIncrementalCopyOfEralierVersionSnapshotNotAllowed ...
#StorageErrorCodeIncrementalCopyOfEralierVersionSnapshotNotAllowed: #StorageErrorCodeType & "IncrementalCopyOfEralierVersionSnapshotNotAllowed"

// StorageErrorCodeIncrementalCopySourceMustBeSnapshot ...
#StorageErrorCodeIncrementalCopySourceMustBeSnapshot: #StorageErrorCodeType & "IncrementalCopySourceMustBeSnapshot"

// StorageErrorCodeInfiniteLeaseDurationRequired ...
#StorageErrorCodeInfiniteLeaseDurationRequired: #StorageErrorCodeType & "InfiniteLeaseDurationRequired"

// StorageErrorCodeInsufficientAccountPermissions ...
#StorageErrorCodeInsufficientAccountPermissions: #StorageErrorCodeType & "InsufficientAccountPermissions"

// StorageErrorCodeInternalError ...
#StorageErrorCodeInternalError: #StorageErrorCodeType & "InternalError"

// StorageErrorCodeInvalidAuthenticationInfo ...
#StorageErrorCodeInvalidAuthenticationInfo: #StorageErrorCodeType & "InvalidAuthenticationInfo"

// StorageErrorCodeInvalidBlobOrBlock ...
#StorageErrorCodeInvalidBlobOrBlock: #StorageErrorCodeType & "InvalidBlobOrBlock"

// StorageErrorCodeInvalidBlobTier ...
#StorageErrorCodeInvalidBlobTier: #StorageErrorCodeType & "InvalidBlobTier"

// StorageErrorCodeInvalidBlobType ...
#StorageErrorCodeInvalidBlobType: #StorageErrorCodeType & "InvalidBlobType"

// StorageErrorCodeInvalidBlockID ...
#StorageErrorCodeInvalidBlockID: #StorageErrorCodeType & "InvalidBlockId"

// StorageErrorCodeInvalidBlockList ...
#StorageErrorCodeInvalidBlockList: #StorageErrorCodeType & "InvalidBlockList"

// StorageErrorCodeInvalidHeaderValue ...
#StorageErrorCodeInvalidHeaderValue: #StorageErrorCodeType & "InvalidHeaderValue"

// StorageErrorCodeInvalidHTTPVerb ...
#StorageErrorCodeInvalidHTTPVerb: #StorageErrorCodeType & "InvalidHttpVerb"

// StorageErrorCodeInvalidInput ...
#StorageErrorCodeInvalidInput: #StorageErrorCodeType & "InvalidInput"

// StorageErrorCodeInvalidMd5 ...
#StorageErrorCodeInvalidMd5: #StorageErrorCodeType & "InvalidMd5"

// StorageErrorCodeInvalidMetadata ...
#StorageErrorCodeInvalidMetadata: #StorageErrorCodeType & "InvalidMetadata"

// StorageErrorCodeInvalidOperation ...
#StorageErrorCodeInvalidOperation: #StorageErrorCodeType & "InvalidOperation"

// StorageErrorCodeInvalidPageRange ...
#StorageErrorCodeInvalidPageRange: #StorageErrorCodeType & "InvalidPageRange"

// StorageErrorCodeInvalidQueryParameterValue ...
#StorageErrorCodeInvalidQueryParameterValue: #StorageErrorCodeType & "InvalidQueryParameterValue"

// StorageErrorCodeInvalidRange ...
#StorageErrorCodeInvalidRange: #StorageErrorCodeType & "InvalidRange"

// StorageErrorCodeInvalidResourceName ...
#StorageErrorCodeInvalidResourceName: #StorageErrorCodeType & "InvalidResourceName"

// StorageErrorCodeInvalidSourceBlobType ...
#StorageErrorCodeInvalidSourceBlobType: #StorageErrorCodeType & "InvalidSourceBlobType"

// StorageErrorCodeInvalidSourceBlobURL ...
#StorageErrorCodeInvalidSourceBlobURL: #StorageErrorCodeType & "InvalidSourceBlobUrl"

// StorageErrorCodeInvalidURI ...
#StorageErrorCodeInvalidURI: #StorageErrorCodeType & "InvalidUri"

// StorageErrorCodeInvalidVersionForPageBlobOperation ...
#StorageErrorCodeInvalidVersionForPageBlobOperation: #StorageErrorCodeType & "InvalidVersionForPageBlobOperation"

// StorageErrorCodeInvalidXMLDocument ...
#StorageErrorCodeInvalidXMLDocument: #StorageErrorCodeType & "InvalidXmlDocument"

// StorageErrorCodeInvalidXMLNodeValue ...
#StorageErrorCodeInvalidXMLNodeValue: #StorageErrorCodeType & "InvalidXmlNodeValue"

// StorageErrorCodeLeaseAlreadyBroken ...
#StorageErrorCodeLeaseAlreadyBroken: #StorageErrorCodeType & "LeaseAlreadyBroken"

// StorageErrorCodeLeaseAlreadyPresent ...
#StorageErrorCodeLeaseAlreadyPresent: #StorageErrorCodeType & "LeaseAlreadyPresent"

// StorageErrorCodeLeaseIDMismatchWithBlobOperation ...
#StorageErrorCodeLeaseIDMismatchWithBlobOperation: #StorageErrorCodeType & "LeaseIdMismatchWithBlobOperation"

// StorageErrorCodeLeaseIDMismatchWithContainerOperation ...
#StorageErrorCodeLeaseIDMismatchWithContainerOperation: #StorageErrorCodeType & "LeaseIdMismatchWithContainerOperation"

// StorageErrorCodeLeaseIDMismatchWithLeaseOperation ...
#StorageErrorCodeLeaseIDMismatchWithLeaseOperation: #StorageErrorCodeType & "LeaseIdMismatchWithLeaseOperation"

// StorageErrorCodeLeaseIDMissing ...
#StorageErrorCodeLeaseIDMissing: #StorageErrorCodeType & "LeaseIdMissing"

// StorageErrorCodeLeaseIsBreakingAndCannotBeAcquired ...
#StorageErrorCodeLeaseIsBreakingAndCannotBeAcquired: #StorageErrorCodeType & "LeaseIsBreakingAndCannotBeAcquired"

// StorageErrorCodeLeaseIsBreakingAndCannotBeChanged ...
#StorageErrorCodeLeaseIsBreakingAndCannotBeChanged: #StorageErrorCodeType & "LeaseIsBreakingAndCannotBeChanged"

// StorageErrorCodeLeaseIsBrokenAndCannotBeRenewed ...
#StorageErrorCodeLeaseIsBrokenAndCannotBeRenewed: #StorageErrorCodeType & "LeaseIsBrokenAndCannotBeRenewed"

// StorageErrorCodeLeaseLost ...
#StorageErrorCodeLeaseLost: #StorageErrorCodeType & "LeaseLost"

// StorageErrorCodeLeaseNotPresentWithBlobOperation ...
#StorageErrorCodeLeaseNotPresentWithBlobOperation: #StorageErrorCodeType & "LeaseNotPresentWithBlobOperation"

// StorageErrorCodeLeaseNotPresentWithContainerOperation ...
#StorageErrorCodeLeaseNotPresentWithContainerOperation: #StorageErrorCodeType & "LeaseNotPresentWithContainerOperation"

// StorageErrorCodeLeaseNotPresentWithLeaseOperation ...
#StorageErrorCodeLeaseNotPresentWithLeaseOperation: #StorageErrorCodeType & "LeaseNotPresentWithLeaseOperation"

// StorageErrorCodeMaxBlobSizeConditionNotMet ...
#StorageErrorCodeMaxBlobSizeConditionNotMet: #StorageErrorCodeType & "MaxBlobSizeConditionNotMet"

// StorageErrorCodeMd5Mismatch ...
#StorageErrorCodeMd5Mismatch: #StorageErrorCodeType & "Md5Mismatch"

// StorageErrorCodeMetadataTooLarge ...
#StorageErrorCodeMetadataTooLarge: #StorageErrorCodeType & "MetadataTooLarge"

// StorageErrorCodeMissingContentLengthHeader ...
#StorageErrorCodeMissingContentLengthHeader: #StorageErrorCodeType & "MissingContentLengthHeader"

// StorageErrorCodeMissingRequiredHeader ...
#StorageErrorCodeMissingRequiredHeader: #StorageErrorCodeType & "MissingRequiredHeader"

// StorageErrorCodeMissingRequiredQueryParameter ...
#StorageErrorCodeMissingRequiredQueryParameter: #StorageErrorCodeType & "MissingRequiredQueryParameter"

// StorageErrorCodeMissingRequiredXMLNode ...
#StorageErrorCodeMissingRequiredXMLNode: #StorageErrorCodeType & "MissingRequiredXmlNode"

// StorageErrorCodeMultipleConditionHeadersNotSupported ...
#StorageErrorCodeMultipleConditionHeadersNotSupported: #StorageErrorCodeType & "MultipleConditionHeadersNotSupported"

// StorageErrorCodeNone represents an empty StorageErrorCodeType.
#StorageErrorCodeNone: #StorageErrorCodeType & ""

// StorageErrorCodeNoPendingCopyOperation ...
#StorageErrorCodeNoPendingCopyOperation: #StorageErrorCodeType & "NoPendingCopyOperation"

// StorageErrorCodeOperationNotAllowedOnIncrementalCopyBlob ...
#StorageErrorCodeOperationNotAllowedOnIncrementalCopyBlob: #StorageErrorCodeType & "OperationNotAllowedOnIncrementalCopyBlob"

// StorageErrorCodeOperationTimedOut ...
#StorageErrorCodeOperationTimedOut: #StorageErrorCodeType & "OperationTimedOut"

// StorageErrorCodeOutOfRangeInput ...
#StorageErrorCodeOutOfRangeInput: #StorageErrorCodeType & "OutOfRangeInput"

// StorageErrorCodeOutOfRangeQueryParameterValue ...
#StorageErrorCodeOutOfRangeQueryParameterValue: #StorageErrorCodeType & "OutOfRangeQueryParameterValue"

// StorageErrorCodePendingCopyOperation ...
#StorageErrorCodePendingCopyOperation: #StorageErrorCodeType & "PendingCopyOperation"

// StorageErrorCodePreviousSnapshotCannotBeNewer ...
#StorageErrorCodePreviousSnapshotCannotBeNewer: #StorageErrorCodeType & "PreviousSnapshotCannotBeNewer"

// StorageErrorCodePreviousSnapshotNotFound ...
#StorageErrorCodePreviousSnapshotNotFound: #StorageErrorCodeType & "PreviousSnapshotNotFound"

// StorageErrorCodePreviousSnapshotOperationNotSupported ...
#StorageErrorCodePreviousSnapshotOperationNotSupported: #StorageErrorCodeType & "PreviousSnapshotOperationNotSupported"

// StorageErrorCodeRequestBodyTooLarge ...
#StorageErrorCodeRequestBodyTooLarge: #StorageErrorCodeType & "RequestBodyTooLarge"

// StorageErrorCodeRequestURLFailedToParse ...
#StorageErrorCodeRequestURLFailedToParse: #StorageErrorCodeType & "RequestUrlFailedToParse"

// StorageErrorCodeResourceAlreadyExists ...
#StorageErrorCodeResourceAlreadyExists: #StorageErrorCodeType & "ResourceAlreadyExists"

// StorageErrorCodeResourceNotFound ...
#StorageErrorCodeResourceNotFound: #StorageErrorCodeType & "ResourceNotFound"

// StorageErrorCodeResourceTypeMismatch ...
#StorageErrorCodeResourceTypeMismatch: #StorageErrorCodeType & "ResourceTypeMismatch"

// StorageErrorCodeSequenceNumberConditionNotMet ...
#StorageErrorCodeSequenceNumberConditionNotMet: #StorageErrorCodeType & "SequenceNumberConditionNotMet"

// StorageErrorCodeSequenceNumberIncrementTooLarge ...
#StorageErrorCodeSequenceNumberIncrementTooLarge: #StorageErrorCodeType & "SequenceNumberIncrementTooLarge"

// StorageErrorCodeServerBusy ...
#StorageErrorCodeServerBusy: #StorageErrorCodeType & "ServerBusy"

// StorageErrorCodeSnaphotOperationRateExceeded ...
#StorageErrorCodeSnaphotOperationRateExceeded: #StorageErrorCodeType & "SnaphotOperationRateExceeded"

// StorageErrorCodeSnapshotCountExceeded ...
#StorageErrorCodeSnapshotCountExceeded: #StorageErrorCodeType & "SnapshotCountExceeded"

// StorageErrorCodeSnapshotsPresent ...
#StorageErrorCodeSnapshotsPresent: #StorageErrorCodeType & "SnapshotsPresent"

// StorageErrorCodeSourceConditionNotMet ...
#StorageErrorCodeSourceConditionNotMet: #StorageErrorCodeType & "SourceConditionNotMet"

// StorageErrorCodeSystemInUse ...
#StorageErrorCodeSystemInUse: #StorageErrorCodeType & "SystemInUse"

// StorageErrorCodeTargetConditionNotMet ...
#StorageErrorCodeTargetConditionNotMet: #StorageErrorCodeType & "TargetConditionNotMet"

// StorageErrorCodeUnauthorizedBlobOverwrite ...
#StorageErrorCodeUnauthorizedBlobOverwrite: #StorageErrorCodeType & "UnauthorizedBlobOverwrite"

// StorageErrorCodeUnsupportedHeader ...
#StorageErrorCodeUnsupportedHeader: #StorageErrorCodeType & "UnsupportedHeader"

// StorageErrorCodeUnsupportedHTTPVerb ...
#StorageErrorCodeUnsupportedHTTPVerb: #StorageErrorCodeType & "UnsupportedHttpVerb"

// StorageErrorCodeUnsupportedQueryParameter ...
#StorageErrorCodeUnsupportedQueryParameter: #StorageErrorCodeType & "UnsupportedQueryParameter"

// StorageErrorCodeUnsupportedXMLNode ...
#StorageErrorCodeUnsupportedXMLNode: #StorageErrorCodeType & "UnsupportedXmlNode"

// SyncCopyStatusType enumerates the values for sync copy status type.
#SyncCopyStatusType: string // #enumSyncCopyStatusType

#enumSyncCopyStatusType:
	#SyncCopyStatusNone |
	#SyncCopyStatusSuccess

// SyncCopyStatusNone represents an empty SyncCopyStatusType.
#SyncCopyStatusNone: #SyncCopyStatusType & ""

// SyncCopyStatusSuccess ...
#SyncCopyStatusSuccess: #SyncCopyStatusType & "success"

// AccessPolicy - An Access policy
#AccessPolicy: {
	// Start - the date-time the policy is active
	Start: time.Time @xml(Start)

	// Expiry - the date-time the policy expires
	Expiry: time.Time @xml(Expiry)

	// Permission - the permissions for the acl policy
	Permission: string @xml(Permission)
}

// BlobFlatListSegment ...
#BlobFlatListSegment: {
	// XMLName is used for marshalling and is subject to removal in a future release.
	XMLName: xml.#Name @xml(Blobs)
	BlobItems: [...#BlobItem] @go(,[]BlobItem) @xml(Blob)
}

// BlobHierarchyListSegment ...
#BlobHierarchyListSegment: {
	// XMLName is used for marshalling and is subject to removal in a future release.
	XMLName: xml.#Name @xml(Blobs)
	BlobPrefixes: [...#BlobPrefix] @go(,[]BlobPrefix) @xml(BlobPrefix)
	BlobItems: [...#BlobItem] @go(,[]BlobItem) @xml(Blob)
}

// BlobItem - An Azure Storage blob
#BlobItem: {
	// XMLName is used for marshalling and is subject to removal in a future release.
	XMLName:    xml.#Name       @xml(Blob)
	Name:       string          @xml(Name)
	Deleted:    bool            @xml(Deleted)
	Snapshot:   string          @xml(Snapshot)
	Properties: #BlobProperties @xml(Properties)
	Metadata:   #Metadata       @xml(Metadata)
}

// BlobPrefix ...
#BlobPrefix: {
	Name: string @xml(Name)
}

// BlobProperties - Properties of a blob
#BlobProperties: {
	// XMLName is used for marshalling and is subject to removal in a future release.
	XMLName:       xml.#Name        @xml(Properties)
	CreationTime?: null | time.Time @go(,*time.Time) @xml(Creation-Time)
	LastModified:  time.Time        @xml(Last-Modified)
	Etag:          #ETag            @xml(Etag)

	// ContentLength - Size in bytes
	ContentLength?:      null | int64  @go(,*int64) @xml(Content-Length)
	ContentType?:        null | string @go(,*string) @xml(Content-Type)
	ContentEncoding?:    null | string @go(,*string) @xml(Content-Encoding)
	ContentLanguage?:    null | string @go(,*string) @xml(Content-Language)
	ContentMD5:          bytes         @go(,[]byte) @xml(Content-MD5)
	ContentDisposition?: null | string @go(,*string) @xml(Content-Disposition)
	CacheControl?:       null | string @go(,*string) @xml(Cache-Control)
	BlobSequenceNumber?: null | int64  @go(,*int64) @xml(x-ms-blob-sequence-number)

	// BlobType - Possible values include: 'BlobBlockBlob', 'BlobPageBlob', 'BlobAppendBlob', 'BlobNone'
	BlobType: #BlobType @xml(BlobType)

	// LeaseStatus - Possible values include: 'LeaseStatusLocked', 'LeaseStatusUnlocked', 'LeaseStatusNone'
	LeaseStatus: #LeaseStatusType @xml(LeaseStatus)

	// LeaseState - Possible values include: 'LeaseStateAvailable', 'LeaseStateLeased', 'LeaseStateExpired', 'LeaseStateBreaking', 'LeaseStateBroken', 'LeaseStateNone'
	LeaseState: #LeaseStateType @xml(LeaseState)

	// LeaseDuration - Possible values include: 'LeaseDurationInfinite', 'LeaseDurationFixed', 'LeaseDurationNone'
	LeaseDuration: #LeaseDurationType @xml(LeaseDuration)
	CopyID?:       null | string      @go(,*string) @xml(CopyId)

	// CopyStatus - Possible values include: 'CopyStatusPending', 'CopyStatusSuccess', 'CopyStatusAborted', 'CopyStatusFailed', 'CopyStatusNone'
	CopyStatus:              #CopyStatusType  @xml(CopyStatus)
	CopySource?:             null | string    @go(,*string) @xml(CopySource)
	CopyProgress?:           null | string    @go(,*string) @xml(CopyProgress)
	CopyCompletionTime?:     null | time.Time @go(,*time.Time) @xml(CopyCompletionTime)
	CopyStatusDescription?:  null | string    @go(,*string) @xml(CopyStatusDescription)
	ServerEncrypted?:        null | bool      @go(,*bool) @xml(ServerEncrypted)
	IncrementalCopy?:        null | bool      @go(,*bool) @xml(IncrementalCopy)
	DestinationSnapshot?:    null | string    @go(,*string) @xml(DestinationSnapshot)
	DeletedTime?:            null | time.Time @go(,*time.Time) @xml(DeletedTime)
	RemainingRetentionDays?: null | int32     @go(,*int32) @xml(RemainingRetentionDays)

	// AccessTier - Possible values include: 'AccessTierP4', 'AccessTierP6', 'AccessTierP10', 'AccessTierP20', 'AccessTierP30', 'AccessTierP40', 'AccessTierP50', 'AccessTierHot', 'AccessTierCool', 'AccessTierArchive', 'AccessTierNone'
	AccessTier:          #AccessTierType @xml(AccessTier)
	AccessTierInferred?: null | bool     @go(,*bool) @xml(AccessTierInferred)

	// ArchiveStatus - Possible values include: 'ArchiveStatusRehydratePendingToHot', 'ArchiveStatusRehydratePendingToCool', 'ArchiveStatusNone'
	ArchiveStatus:         #ArchiveStatusType @xml(ArchiveStatus)
	AccessTierChangeTime?: null | time.Time   @go(,*time.Time) @xml(AccessTierChangeTime)
}

// Block - Represents a single block in a block blob.  It describes the block's ID and size.
#Block: {
	// Name - The base64 encoded block ID.
	Name: string @xml(Name)

	// Size - The block size in bytes.
	Size: int32 @xml(Size)
}

// BlockList ...
#BlockList: {
	CommittedBlocks: [...#Block] @go(,[]Block) @xml(CommittedBlocks>Block)
	UncommittedBlocks: [...#Block] @go(,[]Block) @xml(UncommittedBlocks>Block)
}

// BlockLookupList ...
#BlockLookupList: {
	// XMLName is used for marshalling and is subject to removal in a future release.
	XMLName: xml.#Name @xml(BlockList)
	Committed: [...string] @go(,[]string) @xml(Committed)
	Uncommitted: [...string] @go(,[]string) @xml(Uncommitted)
	Latest: [...string] @go(,[]string) @xml(Latest)
}

// ClearRange ...
#ClearRange: {
	Start: int64 @xml(Start)
	End:   int64 @xml(End)
}

// ContainerItem - An Azure Storage container
#ContainerItem: {
	// XMLName is used for marshalling and is subject to removal in a future release.
	XMLName:    xml.#Name            @xml(Container)
	Name:       string               @xml(Name)
	Properties: #ContainerProperties @xml(Properties)
	Metadata:   #Metadata            @xml(Metadata)
}

// ContainerProperties - Properties of a container
#ContainerProperties: {
	LastModified: time.Time @xml(Last-Modified)
	Etag:         #ETag     @xml(Etag)

	// LeaseStatus - Possible values include: 'LeaseStatusLocked', 'LeaseStatusUnlocked', 'LeaseStatusNone'
	LeaseStatus: #LeaseStatusType @xml(LeaseStatus)

	// LeaseState - Possible values include: 'LeaseStateAvailable', 'LeaseStateLeased', 'LeaseStateExpired', 'LeaseStateBreaking', 'LeaseStateBroken', 'LeaseStateNone'
	LeaseState: #LeaseStateType @xml(LeaseState)

	// LeaseDuration - Possible values include: 'LeaseDurationInfinite', 'LeaseDurationFixed', 'LeaseDurationNone'
	LeaseDuration: #LeaseDurationType @xml(LeaseDuration)

	// PublicAccess - Possible values include: 'PublicAccessContainer', 'PublicAccessBlob', 'PublicAccessNone'
	PublicAccess:           #PublicAccessType @xml(PublicAccess)
	HasImmutabilityPolicy?: null | bool       @go(,*bool) @xml(HasImmutabilityPolicy)
	HasLegalHold?:          null | bool       @go(,*bool) @xml(HasLegalHold)
}

// CorsRule - CORS is an HTTP feature that enables a web application running under one domain to access
// resources in another domain. Web browsers implement a security restriction known as same-origin policy that
// prevents a web page from calling APIs in a different domain; CORS provides a secure way to allow one domain
// (the origin domain) to call APIs in another domain
#CorsRule: {
	// AllowedOrigins - The origin domains that are permitted to make a request against the storage service via CORS. The origin domain is the domain from which the request originates. Note that the origin must be an exact case-sensitive match with the origin that the user age sends to the service. You can also use the wildcard character '*' to allow all origin domains to make requests via CORS.
	AllowedOrigins: string @xml(AllowedOrigins)

	// AllowedMethods - The methods (HTTP request verbs) that the origin domain may use for a CORS request. (comma separated)
	AllowedMethods: string @xml(AllowedMethods)

	// AllowedHeaders - the request headers that the origin domain may specify on the CORS request.
	AllowedHeaders: string @xml(AllowedHeaders)

	// ExposedHeaders - The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer
	ExposedHeaders: string @xml(ExposedHeaders)

	// MaxAgeInSeconds - The maximum amount time that a browser should cache the preflight OPTIONS request.
	MaxAgeInSeconds: int32 @xml(MaxAgeInSeconds)
}

// GeoReplication - Geo-Replication information for the Secondary Storage Service
#GeoReplication: {
	// Status - The status of the secondary location. Possible values include: 'GeoReplicationStatusLive', 'GeoReplicationStatusBootstrap', 'GeoReplicationStatusUnavailable', 'GeoReplicationStatusNone'
	Status: #GeoReplicationStatusType @xml(Status)

	// LastSyncTime - A GMT date/time value, to the second. All primary writes preceding this value are guaranteed to be available for read operations at the secondary. Primary writes after this point in time may or may not be available for reads.
	LastSyncTime: time.Time @xml(LastSyncTime)
}

// KeyInfo - Key information
#KeyInfo: {
	// Start - The date-time the key is active in ISO 8601 UTC time
	Start: string @xml(Start)

	// Expiry - The date-time the key expires in ISO 8601 UTC time
	Expiry: string @xml(Expiry)
}

// ListBlobsFlatSegmentResponse - An enumeration of blobs
#ListBlobsFlatSegmentResponse: {
	// XMLName is used for marshalling and is subject to removal in a future release.
	XMLName:         xml.#Name            @xml(EnumerationResults)
	ServiceEndpoint: string               @xml(ServiceEndpoint,attr)
	ContainerName:   string               @xml(ContainerName,attr)
	Prefix?:         null | string        @go(,*string) @xml(Prefix)
	Marker?:         null | string        @go(,*string) @xml(Marker)
	MaxResults?:     null | int32         @go(,*int32) @xml(MaxResults)
	Delimiter?:      null | string        @go(,*string) @xml(Delimiter)
	Segment:         #BlobFlatListSegment @xml(Blobs)
	NextMarker:      #Marker              @xml(NextMarker)
}

// ListBlobsHierarchySegmentResponse - An enumeration of blobs
#ListBlobsHierarchySegmentResponse: {
	// XMLName is used for marshalling and is subject to removal in a future release.
	XMLName:         xml.#Name                 @xml(EnumerationResults)
	ServiceEndpoint: string                    @xml(ServiceEndpoint,attr)
	ContainerName:   string                    @xml(ContainerName,attr)
	Prefix?:         null | string             @go(,*string) @xml(Prefix)
	Marker?:         null | string             @go(,*string) @xml(Marker)
	MaxResults?:     null | int32              @go(,*int32) @xml(MaxResults)
	Delimiter?:      null | string             @go(,*string) @xml(Delimiter)
	Segment:         #BlobHierarchyListSegment @xml(Blobs)
	NextMarker:      #Marker                   @xml(NextMarker)
}

// ListContainersSegmentResponse - An enumeration of containers
#ListContainersSegmentResponse: {
	// XMLName is used for marshalling and is subject to removal in a future release.
	XMLName:         xml.#Name     @xml(EnumerationResults)
	ServiceEndpoint: string        @xml(ServiceEndpoint,attr)
	Prefix?:         null | string @go(,*string) @xml(Prefix)
	Marker?:         null | string @go(,*string) @xml(Marker)
	MaxResults?:     null | int32  @go(,*int32) @xml(MaxResults)
	ContainerItems: [...#ContainerItem] @go(,[]ContainerItem) @xml(Containers>Container)
	NextMarker: #Marker @xml(NextMarker)
}

// Logging - Azure Analytics Logging settings.
#Logging: {
	// Version - The version of Storage Analytics to configure.
	Version: string @xml(Version)

	// Delete - Indicates whether all delete requests should be logged.
	Delete: bool @xml(Delete)

	// Read - Indicates whether all read requests should be logged.
	Read: bool @xml(Read)

	// Write - Indicates whether all write requests should be logged.
	Write:           bool             @xml(Write)
	RetentionPolicy: #RetentionPolicy @xml(RetentionPolicy)
}

// Metrics - a summary of request statistics grouped by API in hour or minute aggregates for blobs
#Metrics: {
	// Version - The version of Storage Analytics to configure.
	Version?: null | string @go(,*string) @xml(Version)

	// Enabled - Indicates whether metrics are enabled for the Blob service.
	Enabled: bool @xml(Enabled)

	// IncludeAPIs - Indicates whether metrics should generate summary statistics for called API operations.
	IncludeAPIs?:     null | bool             @go(,*bool) @xml(IncludeAPIs)
	RetentionPolicy?: null | #RetentionPolicy @go(,*RetentionPolicy) @xml(RetentionPolicy)
}

// PageList - the list of pages
#PageList: {
	PageRange: [...#PageRange] @go(,[]PageRange) @xml(PageRange)
	ClearRange: [...#ClearRange] @go(,[]ClearRange) @xml(ClearRange)
}

// PageRange ...
#PageRange: {
	Start: int64 @xml(Start)
	End:   int64 @xml(End)
}

// RetentionPolicy - the retention policy which determines how long the associated data should persist
#RetentionPolicy: {
	// Enabled - Indicates whether a retention policy is enabled for the storage service
	Enabled: bool @xml(Enabled)

	// Days - Indicates the number of days that metrics or logging or soft-deleted data should be retained. All data older than this value will be deleted
	Days?: null | int32 @go(,*int32) @xml(Days)
}

// SignedIdentifier - signed identifier
#SignedIdentifier: {
	// ID - a unique id
	ID:           string        @xml(Id)
	AccessPolicy: #AccessPolicy @xml(AccessPolicy)
}

// SignedIdentifiers - Wraps the response from the containerClient.GetAccessPolicy method.
#SignedIdentifiers: {
	Items: [...#SignedIdentifier] @go(,[]SignedIdentifier) @xml(SignedIdentifier)
}

// StaticWebsite - The properties that enable an account to host a static website
#StaticWebsite: {
	// Enabled - Indicates whether this account is hosting a static website
	Enabled: bool @xml(Enabled)

	// IndexDocument - The default name of the index page under each directory
	IndexDocument?: null | string @go(,*string) @xml(IndexDocument)

	// ErrorDocument404Path - The absolute path of the custom 404 page
	ErrorDocument404Path?: null | string @go(,*string) @xml(ErrorDocument404Path)
}

// StorageServiceProperties - Storage Service Properties.
#StorageServiceProperties: {
	Logging?:       null | #Logging @go(,*Logging) @xml(Logging)
	HourMetrics?:   null | #Metrics @go(,*Metrics) @xml(HourMetrics)
	MinuteMetrics?: null | #Metrics @go(,*Metrics) @xml(MinuteMetrics)

	// Cors - The set of CORS rules.
	Cors: [...#CorsRule] @go(,[]CorsRule) @xml(Cors>CorsRule)

	// DefaultServiceVersion - The default version to use for requests to the Blob service if an incoming request's version is not specified. Possible values include version 2008-10-27 and all more recent versions
	DefaultServiceVersion?: null | string           @go(,*string) @xml(DefaultServiceVersion)
	DeleteRetentionPolicy?: null | #RetentionPolicy @go(,*RetentionPolicy) @xml(DeleteRetentionPolicy)
	StaticWebsite?:         null | #StaticWebsite   @go(,*StaticWebsite) @xml(StaticWebsite)
}

// StorageServiceStats - Stats for the storage service.
#StorageServiceStats: {
	GeoReplication?: null | #GeoReplication @go(,*GeoReplication) @xml(GeoReplication)
}

// UserDelegationKey - A user delegation key
#UserDelegationKey: {
	// SignedOid - The Azure Active Directory object ID in GUID format.
	SignedOid: string @xml(SignedOid)

	// SignedTid - The Azure Active Directory tenant ID in GUID format
	SignedTid: string @xml(SignedTid)

	// SignedStart - The date-time the key is active
	SignedStart: time.Time @xml(SignedStart)

	// SignedExpiry - The date-time the key expires
	SignedExpiry: time.Time @xml(SignedExpiry)

	// SignedService - Abbreviation of the Azure Storage service that accepts the key
	SignedService: string @xml(SignedService)

	// SignedVersion - The service version that created the key
	SignedVersion: string @xml(SignedVersion)

	// Value - The key as a base64 string
	Value: string @xml(Value)
}

_#rfc3339Format: "2006-01-02T15:04:05Z"

// internal type used for marshalling time in RFC1123 format
_#timeRFC1123: _

// internal type used for marshalling time in RFC3339 format
_#timeRFC3339: _

// internal type used for marshalling base64 encoded strings
_#base64Encoded: string

// internal type used for marshalling
_#userDelegationKey: {
	SignedOid:     string        @xml(SignedOid)
	SignedTid:     string        @xml(SignedTid)
	SignedStart:   _#timeRFC3339 @xml(SignedStart)
	SignedExpiry:  _#timeRFC3339 @xml(SignedExpiry)
	SignedService: string        @xml(SignedService)
	SignedVersion: string        @xml(SignedVersion)
	Value:         string        @xml(Value)
}

// internal type used for marshalling
_#accessPolicy: {
	Start:      _#timeRFC3339 @xml(Start)
	Expiry:     _#timeRFC3339 @xml(Expiry)
	Permission: string        @xml(Permission)
}

// internal type used for marshalling
_#blobProperties: {
	// XMLName is used for marshalling and is subject to removal in a future release.
	XMLName:                 xml.#Name            @xml(Properties)
	CreationTime?:           null | _#timeRFC1123 @go(,*timeRFC1123) @xml(Creation-Time)
	LastModified:            _#timeRFC1123        @xml(Last-Modified)
	Etag:                    #ETag                @xml(Etag)
	ContentLength?:          null | int64         @go(,*int64) @xml(Content-Length)
	ContentType?:            null | string        @go(,*string) @xml(Content-Type)
	ContentEncoding?:        null | string        @go(,*string) @xml(Content-Encoding)
	ContentLanguage?:        null | string        @go(,*string) @xml(Content-Language)
	ContentDisposition?:     null | string        @go(,*string) @xml(Content-Disposition)
	CacheControl?:           null | string        @go(,*string) @xml(Cache-Control)
	BlobSequenceNumber?:     null | int64         @go(,*int64) @xml(x-ms-blob-sequence-number)
	BlobType:                #BlobType            @xml(BlobType)
	LeaseStatus:             #LeaseStatusType     @xml(LeaseStatus)
	LeaseState:              #LeaseStateType      @xml(LeaseState)
	LeaseDuration:           #LeaseDurationType   @xml(LeaseDuration)
	CopyID?:                 null | string        @go(,*string) @xml(CopyId)
	CopyStatus:              #CopyStatusType      @xml(CopyStatus)
	CopySource?:             null | string        @go(,*string) @xml(CopySource)
	CopyProgress?:           null | string        @go(,*string) @xml(CopyProgress)
	CopyCompletionTime?:     null | _#timeRFC1123 @go(,*timeRFC1123) @xml(CopyCompletionTime)
	CopyStatusDescription?:  null | string        @go(,*string) @xml(CopyStatusDescription)
	ServerEncrypted?:        null | bool          @go(,*bool) @xml(ServerEncrypted)
	IncrementalCopy?:        null | bool          @go(,*bool) @xml(IncrementalCopy)
	DestinationSnapshot?:    null | string        @go(,*string) @xml(DestinationSnapshot)
	DeletedTime?:            null | _#timeRFC1123 @go(,*timeRFC1123) @xml(DeletedTime)
	RemainingRetentionDays?: null | int32         @go(,*int32) @xml(RemainingRetentionDays)
	AccessTier:              #AccessTierType      @xml(AccessTier)
	AccessTierInferred?:     null | bool          @go(,*bool) @xml(AccessTierInferred)
	ArchiveStatus:           #ArchiveStatusType   @xml(ArchiveStatus)
	AccessTierChangeTime?:   null | _#timeRFC1123 @go(,*timeRFC1123) @xml(AccessTierChangeTime)
}

// internal type used for marshalling
_#containerProperties: {
	LastModified:           _#timeRFC1123      @xml(Last-Modified)
	Etag:                   #ETag              @xml(Etag)
	LeaseStatus:            #LeaseStatusType   @xml(LeaseStatus)
	LeaseState:             #LeaseStateType    @xml(LeaseState)
	LeaseDuration:          #LeaseDurationType @xml(LeaseDuration)
	PublicAccess:           #PublicAccessType  @xml(PublicAccess)
	HasImmutabilityPolicy?: null | bool        @go(,*bool) @xml(HasImmutabilityPolicy)
	HasLegalHold?:          null | bool        @go(,*bool) @xml(HasLegalHold)
}

// internal type used for marshalling
_#geoReplication: {
	Status:       #GeoReplicationStatusType @xml(Status)
	LastSyncTime: _#timeRFC1123             @xml(LastSyncTime)
}
